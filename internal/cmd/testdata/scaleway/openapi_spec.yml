openapi: 3.0.0
info:
  title: Instance API
  description: "# Introduction\n\nScaleway Instances are virtual machines in the cloud.
    Different [Instance types](https://www.scaleway.com/en/docs/compute/instances/reference-content/choosing-instance-type/)
    offer different technical specifications in terms of vCPU, RAM, bandwidth and
    storage. Once you have created your Instance and installed your image of choice
    (e.g. an operating system), you can [connect to your Instance via SSH](https://www.scaleway.com/en/docs/compute/instances/how-to/connect-to-instance/)
    to use it as you wish. When you are done using the Instance, you can delete it
    from your account.\n\n## Concepts\n\nRefer to our [dedicated concepts page](https://www.scaleway.com/en/docs/compute/instances/concepts/)
    to find definitions of all concepts and terminology related to Instances.\n\n##
    Quickstart\n\n**Requirements**:\nTo perform the following steps, you must first
    ensure that:\n- You have a [Scaleway account](https://console.scaleway.com/)\n-
    You have created an [API key](https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/)
    and that the API key has sufficient [IAM permissions](https://www.scaleway.com/en/docs/identity-and-access-management/iam/reference-content/permission-sets/)
    to perform the actions described on this page\n- You have [installed `curl`](https://curl.se/download.html)\n\n1.
    Configure your environment variables\n\n  **Note:** This is an optional step that
    seeks to simplify your usage of the Instances API. See [Availability Zones](#availability-zones)
    below for help choosing an Availability Zone. You can find your Project ID in
    the [Scaleway console](https://console.scaleway.com/project/settings).\n\n  ```bash\n
    \ export SCW_SECRET_KEY=\"<API secret key>\"\n  export SCW_DEFAULT_ZONE=\"<Scaleway
    Availability Zone>\"\n  export SCW_PROJECT_ID=\"<Scaleway Project ID>\"\n  ```\n\n2.
    **Create an Instance**: Run the following command to create an Instance. You can
    customize the details in the payload (name, description, type, tags etc) to your
    needs: use the information below to adjust the payload as necessary.\n\n  ```bash\n
    \ curl -X POST \\\n    -H \"X-Auth-Token: $SCW_SECRET_KEY\" \\\n    -H \"Content-Type:
    application/json\" \\\n    \"https://api.scaleway.com/instance/v1/zones/$SCW_DEFAULT_ZONE/servers\"
    \\\n      -d '{\n        \"name\": \"my-new-instance\", \n        \"project\":
    \"'\"$SCW_PROJECT_ID\"'\",\n        \"commercial_type\": \"GP1-S\", \n        \"image\":
    \"544f0add-626b-4e4f-8a96-79fa4414d99a\",\n        \"enable_ipv6\": true,\n        \"volumes\":
    {\n          \"0\":{\n            \"name\": \"my-volume\",\n            \"size\":
    300000000000,\n            \"volume_type\": \"l_ssd\"\n          }\n        }\n
    \     }'\n  ```\n\n| Parameter       | Description                                                                                                                                              |
    Valid values|\n|
    --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------
    | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    |\n| name            | A name of your choice for the Instance (string)                                                                                                          |
    Any string containing only alphanumeric characters, dots, spaces and dashes, e.g.
    `\"my-new-instance\"`.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n|
    project         | The Project in which the Instance should be created (string)
    \                                                                                            |
    Any valid Scaleway Project ID (see above), e.g. `\"b4bd99e0-b389-11ed-afa1-0242ac120002\"`
|\n|
    commercial-type | The commercial Instance type to create (string)                                                                                                          |
    Any valid ID of a Scaleway commercial Instance type, e.g. `\"GP1-S\"`, `\"PRO2-M\"`.
    Use the [List Server Types](https://developers.scaleway.com/en/products/instance/api/#get-feb101)
    endpoint to get a list of all valid Instance types and their IDs.                                                                                                                                                                                                                                                                                                                                                            |\n|
    image           | The image to install on the Instance, e.g. a particular OS (string)
    \                                                                                     |
    Any valid Scaleway image ID, e.g. `\"544f0add-626b-4e4f-8a96-79fa4414d99a\"` which
    is the ID for the `Ubuntu 22.04 Jammy Jellyfish` image. Use the [List Instance
    Images](https://developers.scaleway.com/en/products/instance/api/#get-5f69ed)
    endpoint to get a list of all available images and their IDs.                                                                                                                                                                                                                                                                                                     |\n|
    enable_ipv6     | Whether to enable IPv6 on the Instance (boolean)                                                                                                         |
    `true` or `false`|\n|
    volumes         | An object that specifies the storage volumes to attach to the
    Instance. For more information, see [here](#creating-an-instance-the-object-object-object)
    | A (dictionary) object with a minimum of one key (`\"0\"`) whose value is another
    object containing the parameters `\"name\"` (a name for the volume), `\"size\"`
    (the size for the volume, in bytes), and `\"volume_type\"` (`\"l_ssd\"`, `\"b_ssd\"`
    or `\"unified\"`). Additional keys for additional volumes should increment by
    1 each time (the second volume would have a key of `1`.) Further parameters are
    available, and it is possible to attach existing volumes rather than creating
    a new one, or create a volume from a snapshot. For full details see [here](#creating-an-instance-the-object-object-object).
    |\n\n\n3. **List your Instances**: run the following command to get a list of
    all the Instances in your account, with their details:\n\n  ```sh\n  curl -X GET
    \\\n    -H \"Content-Type: application/json\" \\\n    -H \"X-Auth-Token: $SCW_SECRET_KEY\"
    \\\n    \"https://api.scaleway.com/instance/v1/zones/$SCW_DEFAULT_ZONE/servers/{server_id}/\"\n
    \ ```\n\n4. **Delete an Instance**: run the following command to delete an Instance,
    specified by its Instance ID:\n\n  ```sh\n  curl -X DELETE \\\n  -H \"X-Auth-Token:
    $SCW_SECRET_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  \"https://api.scaleway.com/instance/v1/zones/$SCW_DEFAULT_ZONE/servers/<Instance-ID>\"\n
    \ ```\n\n  The expected successful response is empty.\n\n## Technical Information\n\n###
    Availability Zones\n\nInstances can be deployed in the following Availability
    Zones:\n\n| Name      | API ID                |\n|-----------|-----------------------|\n|
    Paris     | `fr-par-1` `fr-par-2` `fr-par-3` |\n| Amsterdam | `nl-ams-1` `nl-ams-2`
    |\n| Warsaw    | `pl-waw-1` `pl-waw-2` |\n\n### Pagination\n\nMost listing requests
    receive a paginated response. Requests against paginated endpoints accept two
    `query` arguments:\n\n- `page`, a positive integer to choose which page to return.\n-
    `per_page`, an positive integer lower or equal to 100 to select the number of
    items to return per page. The default value is `50`.\n\nPaginated endpoints usually
    also accept filters to search and sort results.These filters are documented along
    each endpoint documentation.\n\nThe `X-Total-Count` header contains the total
    number of items returned.\n\n### Creating an Instance: the `volumes` object\n\nWhen
    [creating an Instance](#post-f5f018), the `volumes` object is a required part
    of the payload. This is a dictionary with a minimum of one key (`\"0\"`) whose
    value is another object setting parameters for that volume. Additional keys for
    additional volumes should increment by 1 each time (the second volume would have
    a key of `1`.)\n\nNote that volume `size` must respect the volume constraints
    of the Instance's `commercial_type`: for each type of Instance, a minimum amount
    of storage is required, and there is also a maximum that cannot be exceeded. Some
    Instance types support only Block Storage (`b_ssd`), others also support local
    storage (`l_ssd`) ). These constraints are available at the [List Server Types](https://developers.scaleway.com/en/products/instance/api/#get-feb101)
    endpoint, via the `volume_constraints` parameter for each type listed in the response\n\nYou
    can use the `volumes` object in different ways. The table below shows which parameters
    are required for each of the following use cases:\n\n| Use case                |
    Required params       | Optional params     | Notes                                  |\n|-------------------------|-----------------------|---------------------|----------------------------------------|\n|
    Create a volume from a snapshot of an image  |  | `volume_type`, `size`, `boot`
    | If the `size` parameter is not set, the size of the volume will equal the size
    of the corresponding snapshot of the image. |\n| Attach an existing volume   |
    `id`, `name` | `boot` |  |\n| Create an empty volume      | `name`, `volume_type`,
    `size` | `organization`, `project`, `boot` |  |\n| Create a volume from a snapshot
    \    | `base_snapshot`, `name`, `volume_type` | `organization`, `project`, `boot`
    |  |\n\n\n## Further support\n\nFor more help using Scaleway Instances, check
    out the following resources:\n- Our [main documentation](https://www.scaleway.com/en/docs/compute/instances/)\n-
    The #instance channel on our [Slack Community](https://www.scaleway.com/en/docs/tutorials/scaleway-slack-community/)\n-
    Our [support ticketing system](https://www.scaleway.com/en/docs/console/my-account/how-to/open-a-support-ticket/)."
  version: v1
servers:
- url: https://api.scaleway.com
tags:
- name: Servers
  description: |
    Server types are denomination of the different instances we provide.
    Scaleway offers **Virtual Cloud** and **dedicated GPU** instances.

    **Virtual Cloud Instances**

    Virtual cloud instances are offering the best performance/price ratio for most workloads.
    Different instance ranges are proposed:

    * The **Development** instances range provides stable and consistent performance for
      development and testing needs. Spin up a development or test environment within seconds.
      Refer to the [Development Instance offer details](https://www.scaleway.com/en/virtual-instances/play2/)
      for more information.

    * The **General Purpose** instances range is the solution for production workloads. Powerful
      AMD EPYC CPUs back those instances and offer up to 48 Cores, 256GB of RAM and storage
      options up to 600GB of replicated local NVMe SSD storage and/or up to 10TB of Block Storage.
      Refer to the [General Purpose offer details](https://www.scaleway.com/en/virtual-instances/pro2/) for more information.

    * The **Enterprise** instances range is the solution for most demanding workloads and
      mission-critical applications. Powerful AMD EPYC CPUs back those instances and
      offer up to 96 Cores, 384GB of RAM and up to 10TB of Block Storage. Refer to the
      [Enterprise offer details](https://www.scaleway.com/en/virtual-instances/enterprise/) for more information.

    **Dedicated GPU Instances**

    Scaleway GPU Instances are virtual compute instances equipped with dedicated high-end
    Nvidia graphical processing unit (GPUs). They are ideal for data processing, artificial
    intelligence, rendering and video encoding. The GPU is dedicated to each instance and
    directly exposed through PCI-e. For more information, refer to the
    [GPU Instances Developper Documentation](https://www.scaleway.com/en/docs/compute/gpu/quickstart/).
- name: Images
  description: |
    Images are backups of your instances.
    You can reuse that image to restore your data or create a series of instances with a predefined configuration.

    An image is a complete backup of your server including all volumes.
- name: Security Groups
  description: |
    A security group is a set of firewall rules on a set of instances.
    Security groups enable to create rules that either drop or allow incoming traffic from certain ports of your instances.

    Security Groups are stateful by default which means return traffic is automatically allowed, regardless of any rules.
    As a contrary, you have to switch in a stateless mode to define explicitly allowed.
- name: User-Data
  description: |
    User data is a key value store API you can use to provide data from and to your server without authentication.

    As an example of use, Scaleway images contain the script scw-generate-ssh-keys which generates SSH server’s host keys then stores their fingerprints as user data under the key “ssh-host-fingerprints”.
    This way, we ensure they are really connecting to their Scaleway instance and they are not victim of a man-in-the-middle attack.

    There are two endpoints to access user data:
     - **From a running instance**, by using the metadata API at http://169.254.42.42/user_data.
       To enhance security, we only allow user data viewing and editing as root.
       To know if the query is issued by the root user, we only accept queries made from a local port below 1024 (by default, non-root users can’t bind ports below 1024).
       To specify the local port with cURL, use `curl --local-port 1-1024 http://169.254.42.42/user_data`
     - **From the instance API** at using methods described bellow.
- name: Server types
  description: |
    Server types will answer with all instance types available in a given zone.
    Each of these types will contains all the features of the instance (CPU, RAM, Storage) with their associated pricing.
- name: Volume types
  description: |
    Volume types will answer with all volume types available in a given zone.
    Each of these types will contains all the capabilities and constraints of the volume (min size, max size, snapshot).
- name: IPs
  description: |
    A flexible IP address is an IP address which you hold independently of any server.
    You can attach it to any of your servers and do live migration of the IP address between your servers.

    Be aware that attaching a flexible IP address to a server will remove the previous public IP address of the server and cut any ongoing public connection to the server.
- name: Volumes
  description: |
    A volume is where you store your data inside your instance. It
    appears as a block device on Linux that you can use to create
    a filesystem and mount it.

    We have two different types of volume (`volume_type`):
      - `l_ssd` is a local block storage: your data is downloaded on
        the hypervisor and you need to power off your instance to attach
        or detach a volume.
      - `b_ssd` is a remote block storage: your data is stored on a
        centralised cluster. You can plug and unplug a volume while
        your instance is running. As of today, `b_ssd` is only available
        for `DEV1`, `GP1` and `RENDER` offers.

    note: The `unified` volume type is not available for volumes. This
    type can only be used on snapshots.

    Minimum and maximum volume sizes for each volume types can be queried
    from the zone `/products/volumes` API endpoint. _I.e_ for:
      - `fr-par-1`  use https://api.scaleway.com/instance/v1/zones/fr-par-1/products/volumes
      - `nl-ams-1`  use https://api.scaleway.com/instance/v1/zones/nl-ams-1/products/volumes

    Each types of volumes is also subject to a global quota for the sum of all the
    volumes. This quota depends of the level of support and may be
    changed on demand.

    Be wary that when terminating an instance, if you want to keep
    your block storage volume, **you must** detach it beforehand you
    issue the `terminate` call.

    When using multiple block devices, it's advised to mount them by
    using their UUID instead of their device name. A device name is
    subject to change depending on the volumes order. Block devices
    UUIDs can be found in `/dev/disk/by-id/`.
- name: Snapshots
  description: |
    Snapshots contain the data of a specific volume at a particular point in time.
    The data can include the instance's operating system,
    configuration information or files stored on the volume.

    A snapshot can be done from a specific volume (for example you
    have a server with a volume containing the OS and another one
    containing the application data, and you want to use different
    snapshot strategies on both volumes).

    A snapshot's volume type can be either its original volume's type
    (`l_ssd` or `b_ssd`) or `unified`. Similarly, volumes can be created as well from snapshots
    of their own type or `unified`. Therefore, to migrate data from a `l_ssd` volume
    to a `b_ssd` volume, one can create a `unified` snapshot from the original volume
    and a new `b_ssd` volume from this snapshot. The newly created volume will hold a copy
    of the data of the original volume.
- name: Bootscripts
  description: |
    Bootscripts are a combination of a [Kernel](https://en.wikipedia.org/wiki/Kernel_(operating_system)) and of an [initrd](https://en.wikipedia.org/wiki/Initial_ramdisk).
    They tell to the instance how to start and configure its starting process and settings.

    Bootscripts usage is now deprecated.

    Scaleway recommends that you take the "local" boot method that will automatically launch your instance with your locally installed kernel.
    It gives you full control over the booting process of your instance.
- name: Placement Groups
  description: |
    Placement groups allow the user to express a preference regarding
    the physical position of a group of instances. It'll let the user
    choose to either group instances on the same physical hardware for
    best network throughput and low latency or to spread instances on
    far away hardware to reduce the risk of physical failure.

    The operating mode is selected by a `policy_type`. Two policy
    types are available:
      - `low_latency` will group instances on the same hypervisors
      - `max_availability` will spread instances on far away hypervisors

    The `policy_type` is set by default to `max_availability`.

    For each policy types, one of the two `policy_mode` may be selected:
      - `optional` will start your instances even if the constraint is not respected
      - `enforced` guarantee that if the instance starts, the constraint is respected

    The `policy_mode` is set by default to `optional`.
- name: Private NICs
  description: |
    A Private NIC is the network interface that connects a server to a
    Private Network. There can be at most one Private NIC connecting a
    server to a network.
components:
  schemas:
    google.protobuf.BoolValue:
      type: boolean
      nullable: true
    google.protobuf.StringValue:
      type: string
      nullable: true
    google.protobuf.UInt32Value:
      type: integer
      nullable: true
    scaleway.instance.v1.Arch:
      type: string
      enum:
      - x86_64
      - arm
      default: x86_64
    scaleway.instance.v1.BootType:
      type: string
      enum:
      - local
      - bootscript
      - rescue
      default: local
    scaleway.instance.v1.Bootscript:
      type: object
      properties:
        bootcmdargs:
          type: string
          description: The bootscript arguments.
        default:
          type: boolean
          description: Dispmay if the bootscript is the default bootscript if no other
            boot option is configured.
        dtb:
          type: string
          description: Provide information regarding a Device Tree Binary (dtb) for
            use with C1 servers.
        id:
          type: string
          description: The bootscript ID.
        initrd:
          type: string
          description: The initrd (initial ramdisk) configuration.
        kernel:
          type: string
          description: The server kernel version.
        organization:
          type: string
          description: The bootscript organization ID.
        project:
          type: string
          description: The bootscript project ID.
        public:
          type: boolean
          description: Provide information if the bootscript is public.
        title:
          type: string
          description: The bootscript title.
        arch:
          type: string
          description: The bootscript arch.
          enum:
          - x86_64
          - arm
          default: x86_64
        zone:
          type: string
          description: The zone in which is the bootscript.
      x-properties-order:
      - bootcmdargs
      - default
      - dtb
      - id
      - initrd
      - kernel
      - organization
      - project
      - public
      - title
      - arch
      - zone
    scaleway.instance.v1.CreateImageResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/scaleway.instance.v1.Image'
      x-properties-order:
      - image
    scaleway.instance.v1.CreateIpResponse:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/scaleway.instance.v1.Ip'
      x-properties-order:
      - ip
    scaleway.instance.v1.CreatePlacementGroupResponse:
      type: object
      properties:
        placement_group:
          $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup'
      x-properties-order:
      - placement_group
    scaleway.instance.v1.CreatePrivateNICResponse:
      type: object
      properties:
        private_nic:
          $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
      x-properties-order:
      - private_nic
    scaleway.instance.v1.CreateSecurityGroupResponse:
      type: object
      properties:
        security_group:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroup'
      x-properties-order:
      - security_group
    scaleway.instance.v1.CreateSecurityGroupRuleResponse:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule'
      x-properties-order:
      - rule
    scaleway.instance.v1.CreateServerResponse:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/scaleway.instance.v1.Server'
      x-properties-order:
      - server
    scaleway.instance.v1.CreateSnapshotResponse:
      type: object
      properties:
        snapshot:
          $ref: '#/components/schemas/scaleway.instance.v1.Snapshot'
        task:
          $ref: '#/components/schemas/scaleway.instance.v1.Task'
      x-properties-order:
      - snapshot
      - task
    scaleway.instance.v1.CreateVolumeResponse:
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/scaleway.instance.v1.Volume'
      x-properties-order:
      - volume
    scaleway.instance.v1.Dashboard:
      type: object
      properties:
        volumes_count:
          type: integer
          format: uint32
        running_servers_count:
          type: integer
          format: uint32
        servers_by_types:
          type: object
          properties:
            <servers_by_typeKey>:
              type: integer
              format: uint32
          additionalProperties: true
        images_count:
          type: integer
          format: uint32
        snapshots_count:
          type: integer
          format: uint32
        servers_count:
          type: integer
          format: uint32
        ips_count:
          type: integer
          format: uint32
        security_groups_count:
          type: integer
          format: uint32
        ips_unused:
          type: integer
          format: uint32
        volumes_l_ssd_count:
          type: integer
          format: uint32
        volumes_b_ssd_count:
          type: integer
          format: uint32
        volumes_l_ssd_total_size:
          type: integer
          description: (in bytes)
          format: uint64
        volumes_b_ssd_total_size:
          type: integer
          description: (in bytes)
          format: uint64
        private_nics_count:
          type: integer
          format: uint32
        placement_groups_count:
          type: integer
          format: uint32
      x-properties-order:
      - volumes_count
      - running_servers_count
      - servers_by_types
      - images_count
      - snapshots_count
      - servers_count
      - ips_count
      - security_groups_count
      - ips_unused
      - volumes_l_ssd_count
      - volumes_b_ssd_count
      - volumes_l_ssd_total_size
      - volumes_b_ssd_total_size
      - private_nics_count
      - placement_groups_count
    scaleway.instance.v1.ExportSnapshotResponse:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/scaleway.instance.v1.Task'
      x-properties-order:
      - task
    scaleway.instance.v1.GetBootscriptResponse:
      type: object
      properties:
        bootscript:
          $ref: '#/components/schemas/scaleway.instance.v1.Bootscript'
      x-properties-order:
      - bootscript
    scaleway.instance.v1.GetDashboardResponse:
      type: object
      properties:
        dashboard:
          $ref: '#/components/schemas/scaleway.instance.v1.Dashboard'
      x-properties-order:
      - dashboard
    scaleway.instance.v1.GetImageResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/scaleway.instance.v1.Image'
      x-properties-order:
      - image
    scaleway.instance.v1.GetIpResponse:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/scaleway.instance.v1.Ip'
      x-properties-order:
      - ip
    scaleway.instance.v1.GetPlacementGroupResponse:
      type: object
      properties:
        placement_group:
          $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup'
      x-properties-order:
      - placement_group
    scaleway.instance.v1.GetPlacementGroupServersResponse:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroupServer'
      x-properties-order:
      - servers
    scaleway.instance.v1.GetPrivateNICResponse:
      type: object
      properties:
        private_nic:
          $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
      x-properties-order:
      - private_nic
    scaleway.instance.v1.GetSecurityGroupResponse:
      type: object
      properties:
        security_group:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroup'
      x-properties-order:
      - security_group
    scaleway.instance.v1.GetSecurityGroupRuleResponse:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule'
      x-properties-order:
      - rule
    scaleway.instance.v1.GetServerResponse:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/scaleway.instance.v1.Server'
      x-properties-order:
      - server
    scaleway.instance.v1.GetServerTypesAvailabilityResponse:
      type: object
      properties:
        servers:
          type: object
          properties:
            <serverKey>:
              $ref: '#/components/schemas/scaleway.instance.v1.GetServerTypesAvailabilityResponse.Availability'
          additionalProperties: true
      x-properties-order:
      - servers
    scaleway.instance.v1.GetServerTypesAvailabilityResponse.Availability:
      type: object
      properties:
        availability:
          $ref: '#/components/schemas/scaleway.instance.v1.ServerTypesAvailability'
      x-properties-order:
      - availability
    scaleway.instance.v1.GetSnapshotResponse:
      type: object
      properties:
        snapshot:
          $ref: '#/components/schemas/scaleway.instance.v1.Snapshot'
      x-properties-order:
      - snapshot
    scaleway.instance.v1.GetVolumeResponse:
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/scaleway.instance.v1.Volume'
      x-properties-order:
      - volume
    scaleway.instance.v1.Image:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        arch:
          $ref: '#/components/schemas/scaleway.instance.v1.Arch'
        creation_date:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        modification_date:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        default_bootscript:
          deprecated: true
          $ref: '#/components/schemas/scaleway.instance.v1.Bootscript'
        extra_volumes:
          type: object
          properties:
            <extra_volumeKey>:
              $ref: '#/components/schemas/scaleway.instance.v1.Volume'
          additionalProperties: true
        from_server:
          type: string
        organization:
          type: string
        public:
          type: boolean
        root_volume:
          $ref: '#/components/schemas/scaleway.instance.v1.VolumeSummary'
        state:
          $ref: '#/components/schemas/scaleway.instance.v1.Image.State'
        project:
          type: string
        tags:
          type: array
          items:
            type: string
        zone:
          type: string
      x-properties-order:
      - id
      - name
      - arch
      - creation_date
      - modification_date
      - default_bootscript
      - extra_volumes
      - from_server
      - organization
      - public
      - root_volume
      - state
      - project
      - tags
      - zone
    scaleway.instance.v1.Image.State:
      type: string
      enum:
      - available
      - creating
      - error
      default: available
    scaleway.instance.v1.Ip:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
          description: (IPv4 address)
          example: 1.2.3.4
        reverse:
          $ref: '#/components/schemas/google.protobuf.StringValue'
        server:
          $ref: '#/components/schemas/scaleway.instance.v1.ServerSummary'
        organization:
          type: string
        tags:
          type: array
          items:
            type: string
        project:
          type: string
        zone:
          type: string
      x-properties-order:
      - id
      - address
      - reverse
      - server
      - organization
      - tags
      - project
      - zone
    scaleway.instance.v1.ListBootscriptsResponse:
      type: object
      properties:
        bootscripts:
          type: array
          description: List of bootscripts.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Bootscript'
      x-properties-order:
      - bootscripts
    scaleway.instance.v1.ListImagesResponse:
      type: object
      properties:
        images:
          type: array
          description: List of images.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Image'
      x-properties-order:
      - images
    scaleway.instance.v1.ListIpsResponse:
      type: object
      properties:
        ips:
          type: array
          description: List of ips.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Ip'
      x-properties-order:
      - ips
    scaleway.instance.v1.ListPlacementGroupsResponse:
      type: object
      properties:
        placement_groups:
          type: array
          description: List of placement groups.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup'
      x-properties-order:
      - placement_groups
    scaleway.instance.v1.ListPrivateNICsResponse:
      type: object
      properties:
        private_nics:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
        total_count:
          type: integer
          format: uint64
      x-properties-order:
      - private_nics
      - total_count
    scaleway.instance.v1.ListSecurityGroupRulesResponse:
      type: object
      properties:
        rules:
          type: array
          description: List of security rules.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule'
      x-properties-order:
      - rules
    scaleway.instance.v1.ListSecurityGroupsResponse:
      type: object
      properties:
        security_groups:
          type: array
          description: List of security groups.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroup'
      x-properties-order:
      - security_groups
    scaleway.instance.v1.ListServerActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Server.Action'
      x-properties-order:
      - actions
    scaleway.instance.v1.ListServerUserDataResponse:
      type: object
      properties:
        user_data:
          type: array
          items:
            type: string
      x-properties-order:
      - user_data
    scaleway.instance.v1.ListServersResponse:
      type: object
      properties:
        servers:
          type: array
          description: List of servers.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Server'
      x-properties-order:
      - servers
    scaleway.instance.v1.ListServersTypesResponse:
      type: object
      properties:
        servers:
          type: object
          description: List of server types.
          properties:
            <serverKey>:
              $ref: '#/components/schemas/scaleway.instance.v1.ServerType'
          additionalProperties: true
      x-properties-order:
      - servers
    scaleway.instance.v1.ListSnapshotsResponse:
      type: object
      properties:
        snapshots:
          type: array
          description: List of snapshots.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Snapshot'
      x-properties-order:
      - snapshots
    scaleway.instance.v1.ListVolumesResponse:
      type: object
      properties:
        volumes:
          type: array
          description: List of volumes.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Volume'
      x-properties-order:
      - volumes
    scaleway.instance.v1.ListVolumesTypesResponse:
      type: object
      properties:
        volumes:
          type: object
          description: Map of volume types.
          properties:
            <volumeKey>:
              $ref: '#/components/schemas/scaleway.instance.v1.VolumeType'
          additionalProperties: true
      x-properties-order:
      - volumes
    scaleway.instance.v1.NullableStringValue:
      type: string
      nullable: true
    scaleway.instance.v1.PlacementGroup:
      type: object
      properties:
        id:
          type: string
          description: The placement group unique ID.
        name:
          type: string
          description: The placement group name.
        organization:
          type: string
          description: The placement group organization ID.
        project:
          type: string
          description: The placement group project ID.
        tags:
          type: array
          description: The placement group tags.
          items:
            type: string
        policy_mode:
          type: string
          description: Select the failling mode when the placement cannot be respected,
            either optional or enforced.
          enum:
          - optional
          - enforced
          default: optional
        policy_type:
          type: string
          description: Select the behavior of the placement group, either low_latency
            (group) or max_availability (spread).
          enum:
          - max_availability
          - low_latency
          default: max_availability
        policy_respected:
          type: boolean
          description: Returns true if the policy is respected, false otherwise.
        zone:
          type: string
          description: The zone in which is the placement group.
      x-properties-order:
      - id
      - name
      - organization
      - project
      - tags
      - policy_mode
      - policy_type
      - policy_respected
      - zone
    scaleway.instance.v1.PlacementGroup.PolicyMode:
      type: string
      enum:
      - optional
      - enforced
      default: optional
    scaleway.instance.v1.PlacementGroup.PolicyType:
      type: string
      enum:
      - max_availability
      - low_latency
      default: max_availability
    scaleway.instance.v1.PlacementGroupServer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        policy_respected:
          type: boolean
      x-properties-order:
      - id
      - name
      - policy_respected
    scaleway.instance.v1.PrivateNIC:
      type: object
      properties:
        id:
          type: string
          description: The private NIC unique ID.
        server_id:
          type: string
          description: The server the private NIC is attached to.
        private_network_id:
          type: string
          description: The private network where the private NIC is attached.
        mac_address:
          type: string
          description: The private NIC MAC address.
        state:
          type: string
          description: The private NIC state.
          enum:
          - available
          - syncing
          - syncing_error
          default: available
        tags:
          type: array
          description: The private NIC tags.
          items:
            type: string
      x-properties-order:
      - id
      - server_id
      - private_network_id
      - mac_address
      - state
      - tags
    scaleway.instance.v1.SecurityGroup:
      type: object
      properties:
        id:
          type: string
          description: The security groups' unique ID.
        name:
          type: string
          description: The security groups name.
        description:
          type: string
          description: The security groups description.
        enable_default_security:
          type: boolean
          description: |-
            True if SMTP is blocked on IPv4 and IPv6.
            True if SMTP is blocked on IPv4 and IPv6. This feature is read only, please open a ticket if you need to make it configurable.
        inbound_default_policy:
          type: string
          description: The default inbound policy.
          enum:
          - accept
          - drop
          default: accept
        outbound_default_policy:
          type: string
          description: The default outbound policy.
          enum:
          - accept
          - drop
          default: accept
        organization:
          type: string
          description: The security groups organization ID.
        project:
          type: string
          description: The security group project ID.
        tags:
          type: array
          description: The security group tags.
          items:
            type: string
        organization_default:
          type: boolean
          description: True if it is your default security group for this organization
            ID.
          deprecated: true
        project_default:
          type: boolean
          description: True if it is your default security group for this project
            ID.
        creation_date:
          type: string
          description: The security group creation date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        modification_date:
          type: string
          description: The security group modification date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        servers:
          type: array
          description: List of servers attached to this security group.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.ServerSummary'
        stateful:
          type: boolean
          description: True if the security group is stateful.
        state:
          type: string
          description: Security group state.
          enum:
          - available
          - syncing
          - syncing_error
          default: available
        zone:
          type: string
          description: The zone in which is the security group.
      x-properties-order:
      - id
      - name
      - description
      - enable_default_security
      - inbound_default_policy
      - outbound_default_policy
      - organization
      - project
      - tags
      - organization_default
      - project_default
      - creation_date
      - modification_date
      - servers
      - stateful
      - state
      - zone
    scaleway.instance.v1.SecurityGroupRule:
      type: object
      properties:
        id:
          type: string
        protocol:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Protocol'
        direction:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Direction'
        action:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Action'
        ip_range:
          type: string
          description: (IP network)
          example: 1.2.3.4/32
        dest_port_from:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
        dest_port_to:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
        position:
          type: integer
          format: uint32
        editable:
          type: boolean
        zone:
          type: string
      x-properties-order:
      - id
      - protocol
      - direction
      - action
      - ip_range
      - dest_port_from
      - dest_port_to
      - position
      - editable
      - zone
    scaleway.instance.v1.SecurityGroupRule.Action:
      type: string
      enum:
      - accept
      - drop
      default: accept
    scaleway.instance.v1.SecurityGroupRule.Direction:
      type: string
      enum:
      - inbound
      - outbound
      default: inbound
    scaleway.instance.v1.SecurityGroupRule.Protocol:
      type: string
      enum:
      - TCP
      - UDP
      - ICMP
      - ANY
      default: TCP
    scaleway.instance.v1.SecurityGroupTemplate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      x-properties-order:
      - id
      - name
    scaleway.instance.v1.Server:
      type: object
      properties:
        id:
          type: string
          description: The server unique ID.
        name:
          type: string
          description: The server name.
        organization:
          type: string
          description: The server organization ID.
        project:
          type: string
          description: The server project ID.
        allowed_actions:
          type: array
          description: Provide as list of allowed actions on the server.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Server.Action'
        tags:
          type: array
          description: The server associated tags.
          items:
            type: string
        commercial_type:
          type: string
          description: The server commercial type (eg. GP1-M).
        creation_date:
          type: string
          description: The server creation date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        dynamic_ip_required:
          type: boolean
          description: True if a dynamic IP is required.
        enable_ipv6:
          type: boolean
          description: True if IPv6 is enabled.
        hostname:
          type: string
          description: The server host name.
        image:
          type: object
          description: Provide information on the server image.
          properties:
            id:
              type: string
            name:
              type: string
            arch:
              $ref: '#/components/schemas/scaleway.instance.v1.Arch'
            creation_date:
              type: string
              description: (RFC 3339 format)
              format: date-time
              example: "2022-03-22T12:34:56.123456Z"
              nullable: true
            modification_date:
              type: string
              description: (RFC 3339 format)
              format: date-time
              example: "2022-03-22T12:34:56.123456Z"
              nullable: true
            default_bootscript:
              deprecated: true
              $ref: '#/components/schemas/scaleway.instance.v1.Bootscript'
            extra_volumes:
              type: object
              properties:
                <extra_volumeKey>:
                  $ref: '#/components/schemas/scaleway.instance.v1.Volume'
              additionalProperties: true
            from_server:
              type: string
            organization:
              type: string
            public:
              type: boolean
            root_volume:
              $ref: '#/components/schemas/scaleway.instance.v1.VolumeSummary'
            state:
              $ref: '#/components/schemas/scaleway.instance.v1.Image.State'
            project:
              type: string
            tags:
              type: array
              items:
                type: string
            zone:
              type: string
          x-properties-order:
          - id
          - name
          - arch
          - creation_date
          - modification_date
          - default_bootscript
          - extra_volumes
          - from_server
          - organization
          - public
          - root_volume
          - state
          - project
          - tags
          - zone
        protected:
          type: boolean
          description: The server protection option is activated.
        private_ip:
          type: string
          description: The server private IP address.
          nullable: true
        public_ip:
          type: object
          description: Information about the public IP.
          properties:
            id:
              type: string
              description: The unique ID of the IP address.
            address:
              type: string
              description: The server public IPv4 IP-Address. (IPv4 address)
              example: 1.2.3.4
            dynamic:
              type: boolean
              description: True if the IP address is dynamic.
          x-properties-order:
          - id
          - address
          - dynamic
        modification_date:
          type: string
          description: The server modification date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        state:
          type: string
          description: The server state.
          enum:
          - running
          - stopped
          - stopped in place
          - starting
          - stopping
          - locked
          default: running
        location:
          type: object
          description: The server location.
          properties:
            cluster_id:
              type: string
            hypervisor_id:
              type: string
            node_id:
              type: string
            platform_id:
              type: string
            zone_id:
              type: string
          x-properties-order:
          - cluster_id
          - hypervisor_id
          - node_id
          - platform_id
          - zone_id
        ipv6:
          type: object
          description: The server IPv6 address.
          properties:
            address:
              type: string
              description: The server IPv6 IP-Address. (IPv6 address)
              example: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
            gateway:
              type: string
              description: The IPv6 IP-addresses gateway. (IPv6 address)
              example: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
            netmask:
              type: string
              description: The IPv6 IP-addresses CIDR netmask.
          x-properties-order:
          - address
          - gateway
          - netmask
        bootscript:
          type: object
          description: The server bootscript.
          deprecated: true
          properties:
            bootcmdargs:
              type: string
              description: The bootscript arguments.
            default:
              type: boolean
              description: Dispmay if the bootscript is the default bootscript if
                no other boot option is configured.
            dtb:
              type: string
              description: Provide information regarding a Device Tree Binary (dtb)
                for use with C1 servers.
            id:
              type: string
              description: The bootscript ID.
            initrd:
              type: string
              description: The initrd (initial ramdisk) configuration.
            kernel:
              type: string
              description: The server kernel version.
            organization:
              type: string
              description: The bootscript organization ID.
            project:
              type: string
              description: The bootscript project ID.
            public:
              type: boolean
              description: Provide information if the bootscript is public.
            title:
              type: string
              description: The bootscript title.
            arch:
              type: string
              description: The bootscript arch.
              enum:
              - x86_64
              - arm
              default: x86_64
            zone:
              type: string
              description: The zone in which is the bootscript.
          x-properties-order:
          - bootcmdargs
          - default
          - dtb
          - id
          - initrd
          - kernel
          - organization
          - project
          - public
          - title
          - arch
          - zone
        boot_type:
          type: string
          description: The server boot type.
          enum:
          - local
          - bootscript
          - rescue
          default: local
        volumes:
          type: object
          description: The server volumes.
          properties:
            <volumeKey>:
              $ref: '#/components/schemas/scaleway.instance.v1.VolumeServer'
          additionalProperties: true
        security_group:
          type: object
          description: The server security group.
          properties:
            id:
              type: string
            name:
              type: string
          x-properties-order:
          - id
          - name
        maintenances:
          type: array
          description: The server planned maintenances.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.Server.Maintenance'
        state_detail:
          type: string
          description: The server state_detail.
        arch:
          type: string
          description: The server arch.
          enum:
          - x86_64
          - arm
          default: x86_64
        placement_group:
          type: object
          description: The server placement group.
          properties:
            id:
              type: string
              description: The placement group unique ID.
            name:
              type: string
              description: The placement group name.
            organization:
              type: string
              description: The placement group organization ID.
            project:
              type: string
              description: The placement group project ID.
            tags:
              type: array
              description: The placement group tags.
              items:
                type: string
            policy_mode:
              type: string
              description: Select the failling mode when the placement cannot be respected,
                either optional or enforced.
              enum:
              - optional
              - enforced
              default: optional
            policy_type:
              type: string
              description: Select the behavior of the placement group, either low_latency
                (group) or max_availability (spread).
              enum:
              - max_availability
              - low_latency
              default: max_availability
            policy_respected:
              type: boolean
              description: Returns true if the policy is respected, false otherwise.
            zone:
              type: string
              description: The zone in which is the placement group.
          x-properties-order:
          - id
          - name
          - organization
          - project
          - tags
          - policy_mode
          - policy_type
          - policy_respected
          - zone
        private_nics:
          type: array
          description: The server private NICs.
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
        zone:
          type: string
          description: The zone in which is the server.
      x-properties-order:
      - id
      - name
      - organization
      - project
      - allowed_actions
      - tags
      - commercial_type
      - creation_date
      - dynamic_ip_required
      - enable_ipv6
      - hostname
      - image
      - protected
      - private_ip
      - public_ip
      - modification_date
      - state
      - location
      - ipv6
      - bootscript
      - boot_type
      - volumes
      - security_group
      - maintenances
      - state_detail
      - arch
      - placement_group
      - private_nics
      - zone
    scaleway.instance.v1.Server.Action:
      type: string
      enum:
      - poweron
      - backup
      - stop_in_place
      - poweroff
      - terminate
      - reboot
      default: poweron
    scaleway.instance.v1.Server.Maintenance:
      type: object
      properties:
        reason:
          type: string
      x-properties-order:
      - reason
    scaleway.instance.v1.ServerActionRequest.VolumeBackupTemplate:
      type: object
      properties:
        volume_type:
          type: string
          description: |-
            The snapshot's volume type.
            Overrides the volume_type of the snapshot for this volume.
            If omitted, the volume type of the original volume will be used.
          enum:
          - unknown_volume_type
          - l_ssd
          - b_ssd
          - unified
          default: unknown_volume_type
      x-properties-order:
      - volume_type
    scaleway.instance.v1.ServerActionResponse:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/scaleway.instance.v1.Task'
      x-properties-order:
      - task
    scaleway.instance.v1.ServerSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      x-properties-order:
      - id
      - name
    scaleway.instance.v1.ServerType:
      type: object
      properties:
        monthly_price:
          type: number
          description: Estimated monthly price, for a 30 days month, in Euro.
          deprecated: true
          format: float
        hourly_price:
          type: number
          description: Hourly price in Euro.
          format: float
        alt_names:
          type: array
          description: Alternative instance name if any.
          items:
            type: string
        per_volume_constraint:
          type: object
          description: Additional volume constraints.
          properties:
            l_ssd:
              type: object
              description: Local SSD volumes.
              properties:
                min_size:
                  type: integer
                  description: Minimum volume size in bytes. (in bytes)
                  format: uint64
                max_size:
                  type: integer
                  description: Maximum volume size in bytes. (in bytes)
                  format: uint64
              x-properties-order:
              - min_size
              - max_size
          x-properties-order:
          - l_ssd
        volumes_constraint:
          type: object
          description: Initial volume constraints.
          properties:
            min_size:
              type: integer
              description: Minimum volume size in bytes. (in bytes)
              format: uint64
            max_size:
              type: integer
              description: Maximum volume size in bytes. (in bytes)
              format: uint64
          x-properties-order:
          - min_size
          - max_size
        ncpus:
          type: integer
          description: Number of CPU.
          format: uint32
        gpu:
          type: integer
          description: Number of GPU.
          nullable: true
        ram:
          type: integer
          description: Available RAM in bytes.
          format: uint64
        arch:
          type: string
          description: CPU architecture.
          enum:
          - x86_64
          - arm
          default: x86_64
        baremetal:
          type: boolean
          description: True if it is a baremetal instance.
        network:
          type: object
          description: Network available for the instance.
          properties:
            interfaces:
              type: array
              description: List of available network interfaces.
              items:
                $ref: '#/components/schemas/scaleway.instance.v1.ServerType.Network.Interface'
            sum_internal_bandwidth:
              type: integer
              description: Total maximum internal bandwidth in bits per seconds.
              nullable: true
            sum_internet_bandwidth:
              type: integer
              description: Total maximum internet bandwidth in bits per seconds.
              nullable: true
            ipv6_support:
              type: boolean
              description: True if IPv6 is enabled.
          x-properties-order:
          - interfaces
          - sum_internal_bandwidth
          - sum_internet_bandwidth
          - ipv6_support
        capabilities:
          type: object
          description: Capabilities.
          properties:
            block_storage:
              type: boolean
              description: True if server supports block storage.
              nullable: true
            boot_types:
              type: array
              description: List of supported boot types.
              items:
                $ref: '#/components/schemas/scaleway.instance.v1.BootType'
          x-properties-order:
          - block_storage
          - boot_types
      x-properties-order:
      - monthly_price
      - hourly_price
      - alt_names
      - per_volume_constraint
      - volumes_constraint
      - ncpus
      - gpu
      - ram
      - arch
      - baremetal
      - network
      - capabilities
    scaleway.instance.v1.ServerType.Network.Interface:
      type: object
      properties:
        internal_bandwidth:
          type: integer
          description: Maximum internal bandwidth in bits per seconds.
          nullable: true
        internet_bandwidth:
          type: integer
          description: Maximum internet bandwidth in bits per seconds.
          nullable: true
      x-properties-order:
      - internal_bandwidth
      - internet_bandwidth
    scaleway.instance.v1.ServerTypesAvailability:
      type: string
      enum:
      - available
      - scarce
      - shortage
      default: available
    scaleway.instance.v1.SetImageResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/scaleway.instance.v1.Image'
      x-properties-order:
      - image
    scaleway.instance.v1.SetPlacementGroupResponse:
      type: object
      properties:
        placement_group:
          $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup'
      x-properties-order:
      - placement_group
    scaleway.instance.v1.SetPlacementGroupServersResponse:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroupServer'
      x-properties-order:
      - servers
    scaleway.instance.v1.SetSecurityGroupResponse:
      type: object
      properties:
        security_group:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroup'
      x-properties-order:
      - security_group
    scaleway.instance.v1.SetSecurityGroupRuleResponse:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule'
      x-properties-order:
      - rule
    scaleway.instance.v1.SetSecurityGroupRulesRequest.Rule:
      type: object
      properties:
        id:
          type: string
          description: UUID of the security rule to update. If no value is provided,
            a new rule will be created.
          nullable: true
        action:
          type: string
          description: Action to apply when the rule matches a packet.
          enum:
          - accept
          - drop
          default: accept
        protocol:
          type: string
          description: Protocol family this rule applies to.
          enum:
          - TCP
          - UDP
          - ICMP
          - ANY
          default: TCP
        direction:
          type: string
          description: Direction the rule applies to.
          enum:
          - inbound
          - outbound
          default: inbound
        ip_range:
          type: string
          description: The range of IP address this rules applies to. (IP network)
          example: 1.2.3.4/32
        dest_port_from:
          type: integer
          description: Beginning of the range of ports this rule applies to (inclusive).
            This value will be set to null if protocol is ICMP or ANY.
          nullable: true
        dest_port_to:
          type: integer
          description: End of the range of ports this rule applies to (inclusive).
            This value will be set to null if protocol is ICMP or ANY, or if it is
            equal to dest_port_from.
          nullable: true
        position:
          type: integer
          description: Position of this rule in the security group rules list. If
            several rules are passed with the same position, the resulting order is
            undefined.
          format: uint32
        editable:
          type: boolean
          description: Indicates if this rule is editable. Rules with the value false
            will be ignored.
          nullable: true
        zone:
          type: string
          description: Zone of the rule. This field is ignored.
          nullable: true
      x-properties-order:
      - id
      - action
      - protocol
      - direction
      - ip_range
      - dest_port_from
      - dest_port_to
      - position
      - editable
      - zone
    scaleway.instance.v1.SetSecurityGroupRulesResponse:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule'
      x-properties-order:
      - rules
    scaleway.instance.v1.SetSnapshotResponse:
      type: object
      properties:
        snapshot:
          $ref: '#/components/schemas/scaleway.instance.v1.Snapshot'
      x-properties-order:
      - snapshot
    scaleway.instance.v1.SetVolumeResponse:
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/scaleway.instance.v1.Volume'
      x-properties-order:
      - volume
    scaleway.instance.v1.Snapshot:
      type: object
      properties:
        id:
          type: string
          description: The snapshot ID.
        name:
          type: string
          description: The snapshot name.
        organization:
          type: string
          description: The snapshot organization ID.
        project:
          type: string
          description: The snapshot project ID.
        tags:
          type: array
          description: The snapshot tags.
          items:
            type: string
        volume_type:
          type: string
          description: The snapshot volume type.
          enum:
          - l_ssd
          - b_ssd
          - unified
          default: l_ssd
        size:
          type: integer
          description: The snapshot size. (in bytes)
          format: uint64
        state:
          type: string
          description: The snapshot state.
          enum:
          - available
          - snapshotting
          - error
          - invalid_data
          - importing
          - exporting
          default: available
        base_volume:
          type: object
          description: The volume on which the snapshot is based on.
          properties:
            id:
              type: string
              description: The volume ID on which the snapshot is based on.
            name:
              type: string
              description: The volume name on which the snapshot is based on.
          x-properties-order:
          - id
          - name
        creation_date:
          type: string
          description: The snapshot creation date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        modification_date:
          type: string
          description: The snapshot modification date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        zone:
          type: string
          description: The snapshot zone.
        error_reason:
          type: string
          description: The reason for the failed snapshot import.
          nullable: true
      x-properties-order:
      - id
      - name
      - organization
      - project
      - tags
      - volume_type
      - size
      - state
      - base_volume
      - creation_date
      - modification_date
      - zone
      - error_reason
    scaleway.instance.v1.Snapshot.BaseVolume:
      type: object
      properties:
        id:
          type: string
          description: The volume ID on which the snapshot is based on.
        name:
          type: string
          description: The volume name on which the snapshot is based on.
      x-properties-order:
      - id
      - name
    scaleway.instance.v1.Snapshot.State:
      type: string
      enum:
      - available
      - snapshotting
      - error
      - invalid_data
      - importing
      - exporting
      default: available
    scaleway.instance.v1.Task:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the task.
        description:
          type: string
          description: The description of the task.
        progress:
          type: integer
          description: The progress of the task in percent.
          format: int32
        started_at:
          type: string
          description: The task start date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        terminated_at:
          type: string
          description: The task end date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        status:
          type: string
          description: The task status.
          enum:
          - pending
          - started
          - success
          - failure
          - retry
          default: pending
        href_from:
          type: string
        href_result:
          type: string
        zone:
          type: string
          description: The zone in which is the task.
      x-properties-order:
      - id
      - description
      - progress
      - started_at
      - terminated_at
      - status
      - href_from
      - href_result
      - zone
    scaleway.instance.v1.UpdateIpResponse:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/scaleway.instance.v1.Ip'
      x-properties-order:
      - ip
    scaleway.instance.v1.UpdatePlacementGroupResponse:
      type: object
      properties:
        placement_group:
          $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup'
      x-properties-order:
      - placement_group
    scaleway.instance.v1.UpdatePlacementGroupServersResponse:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroupServer'
      x-properties-order:
      - servers
    scaleway.instance.v1.UpdateServerResponse:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/scaleway.instance.v1.Server'
      x-properties-order:
      - server
    scaleway.instance.v1.UpdateVolumeResponse:
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/scaleway.instance.v1.Volume'
      x-properties-order:
      - volume
    scaleway.instance.v1.Volume:
      type: object
      properties:
        id:
          type: string
          description: The volume unique ID.
        name:
          type: string
          description: The volume name.
        export_uri:
          type: string
          description: Show the volume NBD export URI.
          deprecated: true
        size:
          type: integer
          description: The volume disk size. (in bytes)
          format: uint64
        volume_type:
          type: string
          description: The volume type.
          enum:
          - l_ssd
          - b_ssd
          - unified
          default: l_ssd
        creation_date:
          type: string
          description: The volume creation date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        modification_date:
          type: string
          description: The volume modification date. (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        organization:
          type: string
          description: The volume organization ID.
        project:
          type: string
          description: The volume project ID.
        tags:
          type: array
          description: The volume tags.
          items:
            type: string
        server:
          type: object
          description: The server attached to the volume.
          properties:
            id:
              type: string
            name:
              type: string
          x-properties-order:
          - id
          - name
        state:
          type: string
          description: The volume state.
          enum:
          - available
          - snapshotting
          - error
          - fetching
          - resizing
          - saving
          - hotsyncing
          default: available
        zone:
          type: string
          description: The zone in which is the volume.
      x-properties-order:
      - id
      - name
      - export_uri
      - size
      - volume_type
      - creation_date
      - modification_date
      - organization
      - project
      - tags
      - server
      - state
      - zone
    scaleway.instance.v1.Volume.VolumeType:
      type: string
      enum:
      - l_ssd
      - b_ssd
      - unified
      default: l_ssd
    scaleway.instance.v1.VolumeServer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        export_uri:
          type: string
        organization:
          type: string
        server:
          $ref: '#/components/schemas/scaleway.instance.v1.ServerSummary'
        size:
          type: integer
          description: (in bytes)
          format: uint64
        volume_type:
          $ref: '#/components/schemas/scaleway.instance.v1.VolumeServer.VolumeType'
        creation_date:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        modification_date:
          type: string
          description: (RFC 3339 format)
          format: date-time
          example: "2022-03-22T12:34:56.123456Z"
          nullable: true
        state:
          $ref: '#/components/schemas/scaleway.instance.v1.VolumeServer.State'
        project:
          type: string
        boot:
          type: boolean
        zone:
          type: string
      x-properties-order:
      - id
      - name
      - export_uri
      - organization
      - server
      - size
      - volume_type
      - creation_date
      - modification_date
      - state
      - project
      - boot
      - zone
    scaleway.instance.v1.VolumeServer.State:
      type: string
      enum:
      - available
      - snapshotting
      - error
      - fetching
      - resizing
      - saving
      - hotsyncing
      default: available
    scaleway.instance.v1.VolumeServer.VolumeType:
      type: string
      enum:
      - l_ssd
      - b_ssd
      default: l_ssd
    scaleway.instance.v1.VolumeServerTemplate:
      type: object
      properties:
        id:
          type: string
          description: UUID of the volume.
        boot:
          type: boolean
          description: Force the server to boot on this volume.
          default: "false"
        name:
          type: string
          description: Name of the volume.
        size:
          type: integer
          description: Disk size of the volume, must be a multiple of 512. (in bytes)
          format: uint64
        volume_type:
          type: string
          description: Type of the volume.
          enum:
          - l_ssd
          - b_ssd
          - unified
          default: l_ssd
        base_snapshot:
          type: string
          description: The ID of the snapshot on which this volume will be based.
        organization:
          type: string
          description: Organization ID of the volume.
        project:
          type: string
          description: Project ID of the volume.
      x-properties-order:
      - id
      - boot
      - name
      - size
      - volume_type
      - base_snapshot
      - organization
      - project
    scaleway.instance.v1.VolumeSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: integer
          description: (in bytes)
          format: uint64
        volume_type:
          $ref: '#/components/schemas/scaleway.instance.v1.Volume.VolumeType'
      x-properties-order:
      - id
      - name
      - size
      - volume_type
    scaleway.instance.v1.VolumeTemplate:
      type: object
      properties:
        id:
          type: string
          description: UUID of the volume.
        name:
          type: string
          description: Name of the volume.
        size:
          type: integer
          description: Disk size of the volume, must be a multiple of 512. (in bytes)
          format: uint64
        volume_type:
          type: string
          description: Type of the volume.
          enum:
          - l_ssd
          - b_ssd
          - unified
          default: l_ssd
        organization:
          type: string
          description: Organization ID of the volume.
          deprecated: true
          x-one-of: ProjectIdentifier
        project:
          type: string
          description: Project ID of the volume.
          x-one-of: ProjectIdentifier
      x-properties-order:
      - id
      - name
      - size
      - volume_type
      - organization
      - project
    scaleway.instance.v1.VolumeType:
      type: object
      properties:
        display_name:
          type: string
        capabilities:
          $ref: '#/components/schemas/scaleway.instance.v1.VolumeType.Capabilities'
        constraints:
          $ref: '#/components/schemas/scaleway.instance.v1.VolumeType.Constraints'
      x-properties-order:
      - display_name
      - capabilities
      - constraints
    scaleway.instance.v1.VolumeType.Capabilities:
      type: object
      properties:
        snapshot:
          type: boolean
      x-properties-order:
      - snapshot
    scaleway.instance.v1.VolumeType.Constraints:
      type: object
      properties:
        min:
          type: integer
          description: (in bytes)
          format: uint64
        max:
          type: integer
          description: (in bytes)
          format: uint64
      x-properties-order:
      - min
      - max
    scaleway.std.File:
      type: object
      properties:
        name:
          type: string
        content_type:
          type: string
        content:
          type: string
      x-properties-order:
      - name
      - content_type
      - content
    scaleway.std.StringsValue:
      type: array
      nullable: true
      items:
        type: string
  securitySchemes:
    scaleway:
      in: header
      name: X-Auth-Token
      type: apiKey
paths:
  /instance/v1/zones/{zone}/bootscripts:
    get:
      tags:
      - Bootscripts
      operationId: ListBootscripts
      summary: List bootscripts
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: arch
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: title
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: default
        schema:
          $ref: '#/components/schemas/google.protobuf.BoolValue'
      - in: query
        name: public
        schema:
          $ref: '#/components/schemas/google.protobuf.BoolValue'
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListBootscriptsResponse'
      security:
      - scaleway: []
      deprecated: true
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/bootscripts?arch=&default=&per_page=&public=&title="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/bootscripts" \
            X-Auth-Token:$SCW_SECRET_KEY \
            arch== \
            default== \
            per_page== \
            public== \
            title==
  /instance/v1/zones/{zone}/bootscripts/{bootscript_id}:
    get:
      tags:
      - Bootscripts
      operationId: GetBootscript
      summary: Get bootscripts
      description: Get details of a bootscript with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: bootscript_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetBootscriptResponse'
      security:
      - scaleway: []
      deprecated: true
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/bootscripts/{bootscript_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/bootscripts/{bootscript_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/dashboard:
    get:
      operationId: GetDashboard
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: organization
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: project
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetDashboardResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/dashboard?organization=&project="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/dashboard" \
            X-Auth-Token:$SCW_SECRET_KEY \
            organization== \
            project==
  /instance/v1/zones/{zone}/images:
    get:
      tags:
      - Images
      operationId: ListImages
      summary: List instance images
      description: List all images available in an account.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: organization
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      - in: query
        name: name
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: public
        schema:
          $ref: '#/components/schemas/google.protobuf.BoolValue'
      - in: query
        name: arch
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: project
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: tags
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListImagesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/images?arch=&name=&organization=&per_page=&project=&public=&tags="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/images" \
            X-Auth-Token:$SCW_SECRET_KEY \
            arch== \
            name== \
            organization== \
            per_page== \
            project== \
            public== \
            tags==
    post:
      tags:
      - Images
      operationId: CreateImage
      summary: Create an instance image
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateImageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the image.
                root_volume:
                  type: string
                  description: UUID of the snapshot.
                arch:
                  type: string
                  description: Architecture of the image.
                  enum:
                  - x86_64
                  - arm
                  default: x86_64
                default_bootscript:
                  type: string
                  description: Default bootscript of the image.
                  deprecated: true
                  nullable: true
                extra_volumes:
                  type: object
                  description: Additional volumes of the image.
                  properties:
                    <extra_volumeKey>:
                      $ref: '#/components/schemas/scaleway.instance.v1.VolumeTemplate'
                  additionalProperties: true
                organization:
                  type: string
                  description: Organization ID of the image.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: Project ID of the image.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The tags of the image.
                  items:
                    type: string
                public:
                  type: boolean
                  description: True to create a public image.
                  nullable: true
              required:
              - root_volume
              - arch
              x-properties-order:
              - name
              - root_volume
              - arch
              - default_bootscript
              - extra_volumes
              - organization
              - project
              - tags
              - public
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "extra_volumes": {
                  "\u003cextra_volumeKey\u003e": ""
              },
              "name": "string",
              "root_volume": "string",
              "tags": [
                  "string"
              ]
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/images"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/images" \
            X-Auth-Token:$SCW_SECRET_KEY \
            extra_volumes:='{
              "\u003cextra_volumeKey\u003e": ""
            }' \
            name="string" \
            root_volume="string" \
            tags:='[
              "string"
            ]'
  /instance/v1/zones/{zone}/images/{id}:
    put:
      tags:
      - Images
      operationId: SetImage
      summary: Update image
      description: Replace all image properties with an image message.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetImageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                arch:
                  $ref: '#/components/schemas/scaleway.instance.v1.Arch'
                creation_date:
                  type: string
                  description: (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                modification_date:
                  type: string
                  description: (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                default_bootscript:
                  deprecated: true
                  $ref: '#/components/schemas/scaleway.instance.v1.Bootscript'
                extra_volumes:
                  type: object
                  properties:
                    <extra_volumeKey>:
                      $ref: '#/components/schemas/scaleway.instance.v1.Volume'
                  additionalProperties: true
                from_server:
                  type: string
                organization:
                  type: string
                public:
                  type: boolean
                root_volume:
                  $ref: '#/components/schemas/scaleway.instance.v1.VolumeSummary'
                state:
                  $ref: '#/components/schemas/scaleway.instance.v1.Image.State'
                project:
                  type: string
                tags:
                  $ref: '#/components/schemas/scaleway.std.StringsValue'
              x-properties-order:
              - name
              - arch
              - creation_date
              - modification_date
              - default_bootscript
              - extra_volumes
              - from_server
              - organization
              - public
              - root_volume
              - state
              - project
              - tags
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "arch": "",
              "default_bootscript": "",
              "extra_volumes": {
                  "\u003cextra_volumeKey\u003e": ""
              },
              "from_server": "string",
              "name": "string",
              "organization": "string",
              "project": "string",
              "public": false,
              "root_volume": "",
              "state": "",
              "tags": ""
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/images/{id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/images/{id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            arch="" \
            default_bootscript="" \
            extra_volumes:='{
              "\u003cextra_volumeKey\u003e": ""
            }' \
            from_server="string" \
            name="string" \
            organization="string" \
            project="string" \
            public:=false \
            root_volume="" \
            state="" \
            tags=""
  /instance/v1/zones/{zone}/images/{image_id}:
    get:
      tags:
      - Images
      operationId: GetImage
      summary: Get an instance image
      description: Get details of an image with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: image_id
        description: UUID of the image you want to get.
        required: true
        schema:
          type: string
          description: UUID of the image you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetImageResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/images/{image_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/images/{image_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - Images
      operationId: DeleteImage
      summary: Delete an instance image
      description: Delete the image with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: image_id
        description: UUID of the image you want to delete.
        required: true
        schema:
          type: string
          description: UUID of the image you want to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/images/{image_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/images/{image_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/ips:
    get:
      tags:
      - IPs
      operationId: ListIps
      summary: List all flexible IPs
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: project
        description: The project ID the IPs are reserved in.
        schema:
          type: string
          description: The project ID the IPs are reserved in.
      - in: query
        name: organization
        description: The organization ID the IPs are reserved in.
        schema:
          type: string
          description: The organization ID the IPs are reserved in.
      - in: query
        name: tags
        description: Filter IPs with these exact tags (to filter with several tags,
          use commas to separate them).
        schema:
          type: string
          description: Filter IPs with these exact tags (to filter with several tags,
            use commas to separate them).
      - in: query
        name: name
        description: Filter on the IP address (Works as a LIKE operation on the IP
          address).
        schema:
          type: string
          description: Filter on the IP address (Works as a LIKE operation on the
            IP address).
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListIpsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/ips"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/ips" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - IPs
      operationId: CreateIp
      summary: Reserve a flexible IP
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateIpResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization:
                  type: string
                  description: The organization ID the IP is reserved in.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: The project ID the IP is reserved in.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The tags of the IP.
                  items:
                    type: string
                server:
                  type: string
                  description: UUID of the server you want to attach the IP to.
                  nullable: true
              x-properties-order:
              - organization
              - project
              - tags
              - server
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"tags":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/ips"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/ips" \
            X-Auth-Token:$SCW_SECRET_KEY \
            tags:='["string"]'
  /instance/v1/zones/{zone}/ips/{ip}:
    get:
      tags:
      - IPs
      operationId: GetIp
      summary: Get a flexible IP
      description: Get details of an IP with the given ID or address.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: ip
        description: The IP ID or address to get.
        required: true
        schema:
          type: string
          description: The IP ID or address to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetIpResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}" \
            X-Auth-Token:$SCW_SECRET_KEY
    patch:
      tags:
      - IPs
      operationId: UpdateIp
      summary: Update a flexible IP
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: ip
        description: IP ID or IP address.
        required: true
        schema:
          type: string
          description: IP ID or IP address.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.UpdateIpResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reverse:
                  type: string
                  description: Reverse domain name.
                  nullable: true
                tags:
                  type: array
                  description: An array of keywords you want to tag this IP with.
                  nullable: true
                  items:
                    type: string
                server:
                  $ref: '#/components/schemas/scaleway.instance.v1.NullableStringValue'
              x-properties-order:
              - reverse
              - tags
              - server
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"server":""}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            server=""
    delete:
      tags:
      - IPs
      operationId: DeleteIp
      summary: Delete a flexible IP
      description: Delete the IP with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: ip
        description: The ID or the address of the IP to delete.
        required: true
        schema:
          type: string
          description: The ID or the address of the IP to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/ips/{ip}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/placement_groups:
    get:
      tags:
      - Placement Groups
      operationId: ListPlacementGroups
      summary: List placement groups
      description: List all placement groups.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      - in: query
        name: organization
        description: List only placement groups of this organization ID.
        schema:
          type: string
          description: List only placement groups of this organization ID.
      - in: query
        name: project
        description: List only placement groups of this project ID.
        schema:
          type: string
          description: List only placement groups of this project ID.
      - in: query
        name: tags
        description: List placement groups with these exact tags (to filter with several
          tags, use commas to separate them).
        schema:
          type: string
          description: List placement groups with these exact tags (to filter with
            several tags, use commas to separate them).
      - in: query
        name: name
        description: Filter placement groups by name (for eg. "cluster1" will return
          "cluster100" and "cluster1" but not "foo").
        schema:
          type: string
          description: Filter placement groups by name (for eg. "cluster1" will return
            "cluster100" and "cluster1" but not "foo").
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListPlacementGroupsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Placement Groups
      operationId: CreatePlacementGroup
      summary: Create a placement group
      description: Create a new placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreatePlacementGroupResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the placement group.
                organization:
                  type: string
                  description: Organization ID of the placement group.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: Project ID of the placement group.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The tags of the placement group.
                  items:
                    type: string
                policy_mode:
                  type: string
                  description: The operating mode of the placement group.
                  enum:
                  - optional
                  - enforced
                  default: optional
                policy_type:
                  type: string
                  description: The policy type of the placement group.
                  enum:
                  - max_availability
                  - low_latency
                  default: max_availability
              x-properties-order:
              - name
              - organization
              - project
              - tags
              - policy_mode
              - policy_type
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"name":"string","tags":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups" \
            X-Auth-Token:$SCW_SECRET_KEY \
            name="string" \
            tags:='["string"]'
  /instance/v1/zones/{zone}/placement_groups/{placement_group_id}:
    get:
      tags:
      - Placement Groups
      operationId: GetPlacementGroup
      summary: Get a placement group
      description: Get the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        description: UUID of the placement group you want to get.
        required: true
        schema:
          type: string
          description: UUID of the placement group you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetPlacementGroupResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    put:
      tags:
      - Placement Groups
      operationId: SetPlacementGroup
      summary: Set placement group
      description: Set all parameters of the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetPlacementGroupResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  type: string
                policy_mode:
                  $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup.PolicyMode'
                policy_type:
                  $ref: '#/components/schemas/scaleway.instance.v1.PlacementGroup.PolicyType'
                project:
                  type: string
                tags:
                  $ref: '#/components/schemas/scaleway.std.StringsValue'
              x-properties-order:
              - name
              - organization
              - policy_mode
              - policy_type
              - project
              - tags
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "name": "string",
              "organization": "string",
              "policy_mode": "",
              "policy_type": "",
              "project": "string",
              "tags": ""
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            name="string" \
            organization="string" \
            policy_mode="" \
            policy_type="" \
            project="string" \
            tags=""
    patch:
      tags:
      - Placement Groups
      operationId: UpdatePlacementGroup
      summary: Update a placement group
      description: Update one or more parameter of the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        description: UUID of the placement group.
        required: true
        schema:
          type: string
          description: UUID of the placement group.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.UpdatePlacementGroupResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the placement group.
                  nullable: true
                tags:
                  type: array
                  description: The tags of the placement group.
                  nullable: true
                  items:
                    type: string
                policy_mode:
                  type: string
                  description: The operating mode of the placement group.
                  enum:
                  - optional
                  - enforced
                  default: optional
                policy_type:
                  type: string
                  description: The policy type of the placement group.
                  enum:
                  - max_availability
                  - low_latency
                  default: max_availability
              x-properties-order:
              - name
              - tags
              - policy_mode
              - policy_type
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - Placement Groups
      operationId: DeletePlacementGroup
      summary: Delete the given placement group
      description: Delete the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        description: UUID of the placement group you want to delete.
        required: true
        schema:
          type: string
          description: UUID of the placement group you want to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers:
    get:
      tags:
      - Placement Groups
      operationId: GetPlacementGroupServers
      summary: Get placement group servers
      description: Get all servers belonging to the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetPlacementGroupServersResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers" \
            X-Auth-Token:$SCW_SECRET_KEY
    put:
      tags:
      - Placement Groups
      operationId: SetPlacementGroupServers
      summary: Set placement group servers
      description: Set all servers belonging to the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetPlacementGroupServersResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                servers:
                  type: array
                  items:
                    type: string
              x-properties-order:
              - servers
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"servers":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers" \
            X-Auth-Token:$SCW_SECRET_KEY \
            servers:='["string"]'
    patch:
      tags:
      - Placement Groups
      operationId: UpdatePlacementGroupServers
      summary: Update placement group servers
      description: Update all servers belonging to the given placement group.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: placement_group_id
        description: UUID of the placement group.
        required: true
        schema:
          type: string
          description: UUID of the placement group.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.UpdatePlacementGroupServersResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                servers:
                  type: array
                  items:
                    type: string
              required:
              - servers
              x-properties-order:
              - servers
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"servers":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/placement_groups/{placement_group_id}/servers" \
            X-Auth-Token:$SCW_SECRET_KEY \
            servers:='["string"]'
  /instance/v1/zones/{zone}/products/servers:
    get:
      tags:
      - Server types
      operationId: ListServersTypes
      summary: List server types
      description: Get server types technical details.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListServersTypesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/products/servers?per_page="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/products/servers" \
            X-Auth-Token:$SCW_SECRET_KEY \
            per_page==
  /instance/v1/zones/{zone}/products/servers/availability:
    get:
      tags:
      - Server types
      operationId: GetServerTypesAvailability
      summary: Get availability
      description: Get availability for all server types.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetServerTypesAvailabilityResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/products/servers/availability?per_page="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/products/servers/availability" \
            X-Auth-Token:$SCW_SECRET_KEY \
            per_page==
  /instance/v1/zones/{zone}/products/volumes:
    get:
      tags:
      - Volume types
      operationId: ListVolumesTypes
      summary: List volumes types
      description: Get volumes technical details.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListVolumesTypesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/products/volumes?per_page="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/products/volumes" \
            X-Auth-Token:$SCW_SECRET_KEY \
            per_page==
  /instance/v1/zones/{zone}/security_groups:
    get:
      tags:
      - Security Groups
      operationId: ListSecurityGroups
      summary: List security groups
      description: List all security groups available in an account.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: name
        description: Name of the security group.
        schema:
          type: string
          description: Name of the security group.
      - in: query
        name: organization
        description: The security group organization ID.
        schema:
          type: string
          description: The security group organization ID.
      - in: query
        name: project
        description: The security group project ID.
        schema:
          type: string
          description: The security group project ID.
      - in: query
        name: tags
        description: List security groups with these exact tags (to filter with several
          tags, use commas to separate them).
        schema:
          type: string
          description: List security groups with these exact tags (to filter with
            several tags, use commas to separate them).
      - in: query
        name: project_default
        description: Filter security groups with this value for project_default.
        schema:
          type: boolean
          description: Filter security groups with this value for project_default.
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListSecurityGroupsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Security Groups
      operationId: CreateSecurityGroup
      summary: Create a security group
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateSecurityGroupResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the security group.
                description:
                  type: string
                  description: Description of the security group.
                organization:
                  type: string
                  description: Organization ID the security group belongs to.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: Project ID the security group belong to.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The tags of the security group.
                  items:
                    type: string
                organization_default:
                  type: boolean
                  description: Whether this security group becomes the default security
                    group for new instances.
                  deprecated: true
                  default: "false"
                  x-one-of: DefaultIdentifier
                project_default:
                  type: boolean
                  description: Whether this security group becomes the default security
                    group for new instances.
                  default: "false"
                  x-one-of: DefaultIdentifier
                stateful:
                  type: boolean
                  description: Whether the security group is stateful or not.
                  default: "false"
                inbound_default_policy:
                  type: string
                  description: Default policy for inbound rules.
                  enum:
                  - accept
                  - drop
                  default: accept
                outbound_default_policy:
                  type: string
                  description: Default policy for outbound rules.
                  enum:
                  - accept
                  - drop
                  default: accept
                enable_default_security:
                  type: boolean
                  description: |-
                    True to block SMTP on IPv4 and IPv6.
                    True if SMTP is blocked on IPv4 and IPv6. This feature is read only, please open a ticket if you need to make it configurable.
                  nullable: true
              required:
              - name
              x-properties-order:
              - name
              - description
              - organization
              - project
              - tags
              - organization_default
              - project_default
              - stateful
              - inbound_default_policy
              - outbound_default_policy
              - enable_default_security
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "description": "string",
              "name": "string",
              "tags": [
                  "string"
              ]
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups" \
            X-Auth-Token:$SCW_SECRET_KEY \
            description="string" \
            name="string" \
            tags:='[
              "string"
            ]'
  /instance/v1/zones/{zone}/security_groups/{id}:
    put:
      tags:
      - Security Groups
      operationId: SetSecurityGroup
      summary: Update a security group
      description: Replace all security group properties with a security group message.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: id
        description: The ID of the security group (will be ignored).
        required: true
        schema:
          type: string
          description: The ID of the security group (will be ignored).
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetSecurityGroupResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the security group.
                tags:
                  type: array
                  description: The tags of the security group.
                  nullable: true
                  items:
                    type: string
                creation_date:
                  type: string
                  description: The creation date of the security group (will be ignored).
                    (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                modification_date:
                  type: string
                  description: The modification date of the security group (will be
                    ignored). (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                description:
                  type: string
                  description: The description of the security group.
                enable_default_security:
                  type: boolean
                  description: |-
                    True to block SMTP on IPv4 and IPv6.
                    True if SMTP is blocked on IPv4 and IPv6. This feature is read only, please open a ticket if you need to make it configurable.
                inbound_default_policy:
                  type: string
                  description: The default inbound policy.
                  enum:
                  - accept
                  - drop
                  default: accept
                outbound_default_policy:
                  type: string
                  description: The default outbound policy.
                  enum:
                  - accept
                  - drop
                  default: accept
                organization:
                  type: string
                  description: The security groups organization ID.
                project:
                  type: string
                  description: The security group project ID.
                organization_default:
                  type: boolean
                  description: Please use project_default instead.
                  deprecated: true
                project_default:
                  type: boolean
                  description: True use this security group for future instances created
                    in this project.
                servers:
                  type: array
                  description: The servers attached to this security group.
                  items:
                    $ref: '#/components/schemas/scaleway.instance.v1.ServerSummary'
                stateful:
                  type: boolean
                  description: True to set the security group as stateful.
              x-properties-order:
              - name
              - tags
              - creation_date
              - modification_date
              - description
              - enable_default_security
              - inbound_default_policy
              - outbound_default_policy
              - organization
              - project
              - organization_default
              - project_default
              - servers
              - stateful
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "description": "string",
              "enable_default_security": false,
              "name": "string",
              "organization": "string",
              "organization_default": false,
              "project": "string",
              "project_default": false,
              "servers": [
                  ""
              ],
              "stateful": false
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            description="string" \
            enable_default_security:=false \
            name="string" \
            organization="string" \
            organization_default:=false \
            project="string" \
            project_default:=false \
            servers:='[
              ""
            ]' \
            stateful:=false
  /instance/v1/zones/{zone}/security_groups/{security_group_id}:
    get:
      tags:
      - Security Groups
      operationId: GetSecurityGroup
      summary: Get a security group
      description: Get the details of a Security Group with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        description: UUID of the security group you want to get.
        required: true
        schema:
          type: string
          description: UUID of the security group you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetSecurityGroupResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - Security Groups
      operationId: DeleteSecurityGroup
      summary: Delete a security group
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        description: UUID of the security group you want to delete.
        required: true
        schema:
          type: string
          description: UUID of the security group you want to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/security_groups/{security_group_id}/rules:
    get:
      tags:
      - Security Groups
      operationId: ListSecurityGroupRules
      summary: List rules
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        description: UUID of the security group.
        required: true
        schema:
          type: string
          description: UUID of the security group.
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListSecurityGroupRulesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Security Groups
      operationId: CreateSecurityGroupRule
      summary: Create rule
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        description: UUID of the security group.
        required: true
        schema:
          type: string
          description: UUID of the security group.
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateSecurityGroupRuleResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                protocol:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Protocol'
                direction:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Direction'
                action:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Action'
                ip_range:
                  type: string
                  description: (IP network)
                  example: 1.2.3.4/32
                dest_port_from:
                  type: integer
                  description: The beginning of the range of ports to apply this rule
                    to (inclusive).
                  nullable: true
                dest_port_to:
                  type: integer
                  description: The end of the range of ports to apply this rule to
                    (inclusive).
                  nullable: true
                position:
                  type: integer
                  description: The position of this rule in the security group rules
                    list.
                  format: uint32
                editable:
                  type: boolean
                  description: Indicates if this rule is editable (will be ignored).
              required:
              - protocol
              - direction
              - action
              - ip_range
              x-properties-order:
              - protocol
              - direction
              - action
              - ip_range
              - dest_port_from
              - dest_port_to
              - position
              - editable
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "action": "",
              "direction": "",
              "editable": false,
              "ip_range": "1.2.3.4/32",
              "position": 42,
              "protocol": ""
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules" \
            X-Auth-Token:$SCW_SECRET_KEY \
            action="" \
            direction="" \
            editable:=false \
            ip_range="1.2.3.4/32" \
            position:=42 \
            protocol=""
    put:
      tags:
      - Security Groups
      operationId: SetSecurityGroupRules
      summary: Update all the rules of a security group
      description: Replaces the rules of the security group with the rules provided.
        This endpoint supports the update of existing rules, creation of new rules
        and deletion of existing rules when they are not passed in the request.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        description: UUID of the security group to update the rules on.
        required: true
        schema:
          type: string
          description: UUID of the security group to update the rules on.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetSecurityGroupRulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  type: array
                  description: List of rules to update in the security group.
                  items:
                    $ref: '#/components/schemas/scaleway.instance.v1.SetSecurityGroupRulesRequest.Rule'
              x-properties-order:
              - rules
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"rules":[""]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules" \
            X-Auth-Token:$SCW_SECRET_KEY \
            rules:='[""]'
  /instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}:
    get:
      tags:
      - Security Groups
      operationId: GetSecurityGroupRule
      summary: Get rule
      description: Get details of a security group rule with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        required: true
        schema:
          type: string
      - in: path
        name: security_group_rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetSecurityGroupRuleResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    put:
      tags:
      - Security Groups
      operationId: SetSecurityGroupRule
      summary: Update security group rule
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        required: true
        schema:
          type: string
      - in: path
        name: security_group_rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetSecurityGroupRuleResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                protocol:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Protocol'
                direction:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Direction'
                action:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupRule.Action'
                ip_range:
                  type: string
                  description: (IP network)
                  example: 1.2.3.4/32
                dest_port_from:
                  $ref: '#/components/schemas/google.protobuf.UInt32Value'
                dest_port_to:
                  $ref: '#/components/schemas/google.protobuf.UInt32Value'
                position:
                  type: integer
                  format: uint32
                editable:
                  type: boolean
              x-properties-order:
              - id
              - protocol
              - direction
              - action
              - ip_range
              - dest_port_from
              - dest_port_to
              - position
              - editable
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "action": "",
              "dest_port_from": "",
              "dest_port_to": "",
              "direction": "",
              "editable": false,
              "id": "string",
              "ip_range": "1.2.3.4/32",
              "position": 42,
              "protocol": ""
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            action="" \
            dest_port_from="" \
            dest_port_to="" \
            direction="" \
            editable:=false \
            id="string" \
            ip_range="1.2.3.4/32" \
            position:=42 \
            protocol=""
    delete:
      tags:
      - Security Groups
      operationId: DeleteSecurityGroupRule
      summary: Delete rule
      description: Delete a security group rule with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: security_group_id
        required: true
        schema:
          type: string
      - in: path
        name: security_group_rule_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/{security_group_id}/rules/{security_group_rule_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/security_groups/default/rules:
    get:
      tags:
      - Security Groups
      operationId: ListDefaultSecurityGroupRules
      summary: Get default rules
      description: Lists the default rules applied to all the security groups.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListSecurityGroupRulesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/default/rules"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/security_groups/default/rules" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/servers:
    get:
      tags:
      - Servers
      operationId: ListServers
      summary: List all servers
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      - in: query
        name: organization
        description: List only servers of this organization ID.
        schema:
          type: string
          description: List only servers of this organization ID.
      - in: query
        name: project
        description: List only servers of this project ID.
        schema:
          type: string
          description: List only servers of this project ID.
      - in: query
        name: name
        description: Filter servers by name (for eg. "server1" will return "server100"
          and "server1" but not "foo").
        schema:
          type: string
          description: Filter servers by name (for eg. "server1" will return "server100"
            and "server1" but not "foo").
      - in: query
        name: private_ip
        description: List servers by private_ip. (IP address)
        schema:
          type: string
          description: List servers by private_ip. (IP address)
          example: 1.2.3.4
      - in: query
        name: without_ip
        description: List servers that are not attached to a public IP.
        schema:
          type: boolean
          description: List servers that are not attached to a public IP.
      - in: query
        name: commercial_type
        description: List servers of this commercial type.
        schema:
          type: string
          description: List servers of this commercial type.
      - in: query
        name: state
        description: List servers in this state.
        schema:
          type: string
          description: List servers in this state.
          enum:
          - running
          - stopped
          - stopped in place
          - starting
          - stopping
          - locked
          default: running
      - in: query
        name: tags
        description: List servers with these exact tags (to filter with several tags,
          use commas to separate them).
        schema:
          type: string
          description: List servers with these exact tags (to filter with several
            tags, use commas to separate them).
      - in: query
        name: private_network
        description: List servers in this Private Network.
        schema:
          type: string
          description: List servers in this Private Network.
      - in: query
        name: order
        description: Define the order of the returned servers.
        schema:
          type: string
          description: Define the order of the returned servers.
          enum:
          - creation_date_desc
          - creation_date_asc
          - modification_date_desc
          - modification_date_asc
          default: creation_date_desc
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListServersResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Servers
      operationId: CreateServer
      summary: Create a server
      description: |-
        The `volumes` key is a dictionary composed of the volume position as key and the volume parameters as value.
        Depending of the volume parameters, you can achieve different behaviours :

        Create a volume from a snapshot of an image :
        Optional : `volume_type`, `size`, `boot`.
        If the `size` parameter is not set, the size of the volume will equal the size of the corresponding snapshot of the image.

        Attach an existing volume :
        Required : `id`, `name`.
        Optional : `boot`.

        Create an empty volume :
        Required : `name`, `volume_type`, `size`.
        Optional : `organization`, `project`, `boot`.

        Create a volume from a snapshot :
        Required : `base_snapshot`, `name`, `volume_type`.
        Optional : `organization`, `project`, `boot`.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateServerResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The server name.
                dynamic_ip_required:
                  type: boolean
                  description: Define if a dynamic IP is required for the instance.
                  nullable: true
                commercial_type:
                  type: string
                  description: Define the server commercial type (i.e. GP1-S).
                image:
                  type: string
                  description: The server image ID.
                volumes:
                  type: object
                  description: The volumes attached to the server.
                  properties:
                    <volumeKey>:
                      $ref: '#/components/schemas/scaleway.instance.v1.VolumeServerTemplate'
                  additionalProperties: true
                enable_ipv6:
                  type: boolean
                  description: True if IPv6 is enabled on the server.
                public_ip:
                  type: string
                  description: The ID of the reserved IP to attach to the server.
                  nullable: true
                boot_type:
                  type: string
                  description: The boot type to use.
                  enum:
                  - local
                  - bootscript
                  - rescue
                  default: local
                bootscript:
                  type: string
                  description: The bootscript ID to use when `boot_type` is set to
                    `bootscript`.
                  deprecated: true
                  nullable: true
                organization:
                  type: string
                  description: The server organization ID.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: The server project ID.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The server tags.
                  items:
                    type: string
                security_group:
                  type: string
                  description: The security group ID.
                  nullable: true
                placement_group:
                  type: string
                  description: Placement group ID if server must be part of a placement
                    group.
                  nullable: true
              required:
              - name
              - commercial_type
              x-properties-order:
              - name
              - dynamic_ip_required
              - commercial_type
              - image
              - volumes
              - enable_ipv6
              - public_ip
              - boot_type
              - bootscript
              - organization
              - project
              - tags
              - security_group
              - placement_group
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "commercial_type": "string",
              "enable_ipv6": false,
              "image": "string",
              "name": "string",
              "tags": [
                  "string"
              ],
              "volumes": {
                  "\u003cvolumeKey\u003e": ""
              }
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/servers" \
            X-Auth-Token:$SCW_SECRET_KEY \
            commercial_type="string" \
            enable_ipv6:=false \
            image="string" \
            name="string" \
            tags:='[
              "string"
            ]' \
            volumes:='{
              "\u003cvolumeKey\u003e": ""
            }'
  /instance/v1/zones/{zone}/servers/{server_id}:
    get:
      tags:
      - Servers
      operationId: GetServer
      summary: Get a server
      description: Get the details of a specified Server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server you want to get.
        required: true
        schema:
          type: string
          description: UUID of the server you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetServerResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    patch:
      tags:
      - Servers
      operationId: UpdateServer
      summary: Update a server
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.UpdateServerResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the server.
                  nullable: true
                boot_type:
                  $ref: '#/components/schemas/scaleway.instance.v1.BootType'
                tags:
                  type: array
                  description: Tags of the server.
                  nullable: true
                  items:
                    type: string
                volumes:
                  type: object
                  properties:
                    <volumeKey>:
                      $ref: '#/components/schemas/scaleway.instance.v1.VolumeServerTemplate'
                  additionalProperties: true
                bootscript:
                  deprecated: true
                  $ref: '#/components/schemas/google.protobuf.StringValue'
                dynamic_ip_required:
                  $ref: '#/components/schemas/google.protobuf.BoolValue'
                enable_ipv6:
                  $ref: '#/components/schemas/google.protobuf.BoolValue'
                protected:
                  $ref: '#/components/schemas/google.protobuf.BoolValue'
                security_group:
                  $ref: '#/components/schemas/scaleway.instance.v1.SecurityGroupTemplate'
                placement_group:
                  type: string
                  description: Placement group ID if server must be part of a placement
                    group.
                  nullable: true
                private_nics:
                  type: array
                  description: The server private NICs.
                  items:
                    $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
              x-properties-order:
              - name
              - boot_type
              - tags
              - volumes
              - bootscript
              - dynamic_ip_required
              - enable_ipv6
              - protected
              - security_group
              - placement_group
              - private_nics
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "boot_type": "",
              "bootscript": "",
              "dynamic_ip_required": "",
              "enable_ipv6": "",
              "private_nics": [
                  ""
              ],
              "protected": "",
              "security_group": "",
              "volumes": {
                  "\u003cvolumeKey\u003e": ""
              }
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            boot_type="" \
            bootscript="" \
            dynamic_ip_required="" \
            enable_ipv6="" \
            private_nics:='[
              ""
            ]' \
            protected="" \
            security_group="" \
            volumes:='{
              "\u003cvolumeKey\u003e": ""
            }'
    delete:
      tags:
      - Servers
      operationId: DeleteServer
      summary: Delete a server
      description: Delete a server with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/servers/{server_id}/action:
    get:
      tags:
      - Servers
      operationId: ListServerActions
      summary: List server actions
      description: List all actions that can currently be performed on a server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListServerActionsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/action"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/action" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Servers
      operationId: ServerAction
      summary: Perform action
      description: Perform power related actions on a server. Be wary that when terminating
        a server, all the attached volumes (local *and* block storage) are deleted.
        So, if you want to keep your local volumes, you must use the `archive` action
        instead of `terminate`. And if you want to keep block-storage volumes, **you
        must** detach it beforehand you issue the `terminate` call.  For more information,
        read the [Volumes](#volumes-7e8a39) documentation.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ServerActionResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: The action to perform on the server.
                  enum:
                  - poweron
                  - backup
                  - stop_in_place
                  - poweroff
                  - terminate
                  - reboot
                  default: poweron
                name:
                  type: string
                  description: |-
                    The name of the backup you want to create.
                    The name of the backup you want to create.
                    This field should only be specified when performing a backup action.
                  nullable: true
                volumes:
                  type: object
                  description: |-
                    For each volume UUID, the snapshot parameters of the volume.
                    For each volume UUID, the snapshot parameters of the volume.
                    This field should only be specified when performing a backup action.
                  properties:
                    <volumeKey>:
                      $ref: '#/components/schemas/scaleway.instance.v1.ServerActionRequest.VolumeBackupTemplate'
                  additionalProperties: true
              x-properties-order:
              - action
              - name
              - volumes
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"volumes":{"\u003cvolumeKey\u003e":""}}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/action"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/action" \
            X-Auth-Token:$SCW_SECRET_KEY \
            volumes:='{"\u003cvolumeKey\u003e":""}'
  /instance/v1/zones/{zone}/servers/{server_id}/private_nics:
    get:
      tags:
      - Private NICs
      operationId: ListPrivateNICs
      summary: List all private NICs
      description: List all private NICs of a given server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: The server the private NIC is attached to.
        required: true
        schema:
          type: string
          description: The server the private NIC is attached to.
      - in: query
        name: tags
        description: The private NIC tags.
        schema:
          type: string
          description: The private NIC tags.
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListPrivateNICsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Private NICs
      operationId: CreatePrivateNIC
      summary: Create a private NIC connecting a server to a private network
      description: Create a private NIC connecting a server to a private network.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server the private NIC will be attached to.
        required: true
        schema:
          type: string
          description: UUID of the server the private NIC will be attached to.
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreatePrivateNICResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                private_network_id:
                  type: string
                  description: UUID of the private network where the private NIC will
                    be attached.
                tags:
                  type: array
                  description: The private NIC tags.
                  items:
                    type: string
              required:
              - private_network_id
              x-properties-order:
              - private_network_id
              - tags
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"private_network_id":"string","tags":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics" \
            X-Auth-Token:$SCW_SECRET_KEY \
            private_network_id="string" \
            tags:='["string"]'
  /instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}:
    get:
      tags:
      - Private NICs
      operationId: GetPrivateNIC
      summary: Get a private NIC
      description: Get private NIC properties.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: The server the private NIC is attached to.
        required: true
        schema:
          type: string
          description: The server the private NIC is attached to.
      - in: path
        name: private_nic_id
        description: The private NIC unique ID.
        required: true
        schema:
          type: string
          description: The private NIC unique ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetPrivateNICResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    patch:
      tags:
      - Private NICs
      operationId: UpdatePrivateNIC
      summary: Update a private NIC
      description: Update one or more parameter/s to a given private NIC.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server the private NIC will be attached to.
        required: true
        schema:
          type: string
          description: UUID of the server the private NIC will be attached to.
      - in: path
        name: private_nic_id
        description: The private NIC unique ID.
        required: true
        schema:
          type: string
          description: The private NIC unique ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.PrivateNIC'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  description: Tags used to select private NIC/s.
                  nullable: true
                  items:
                    type: string
              x-properties-order:
              - tags
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - Private NICs
      operationId: DeletePrivateNIC
      summary: Delete a private NIC
      description: Delete a private NIC.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: The server the private NIC is attached to.
        required: true
        schema:
          type: string
          description: The server the private NIC is attached to.
      - in: path
        name: private_nic_id
        description: The private NIC unique ID.
        required: true
        schema:
          type: string
          description: The private NIC unique ID.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/private_nics/{private_nic_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/servers/{server_id}/user_data:
    get:
      tags:
      - User-Data
      operationId: ListServerUserData
      summary: List user data
      description: List all user data keys registered on a given server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListServerUserDataResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}:
    get:
      tags:
      - User-Data
      operationId: GetServerUserData
      summary: Get user data
      description: Get the content of a user data with the given key on a server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      - in: path
        name: key
        description: Key of the user data to get.
        required: true
        schema:
          type: string
          description: Key of the user data to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.std.File'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}" \
            X-Auth-Token:$SCW_SECRET_KEY
    patch:
      tags:
      - User-Data
      operationId: SetServerUserData
      summary: Add/Set user data
      description: Add or update a user data with the given key on a server.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      - in: path
        name: key
        description: Key of the user data to set.
        required: true
        schema:
          type: string
          description: Key of the user data to set.
      responses:
        "204":
          description: ""
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              type: string
              format: binary
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - User-Data
      operationId: DeleteServerUserData
      summary: Delete user data
      description: Delete the given key from a server user data.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: server_id
        description: UUID of the server.
        required: true
        schema:
          type: string
          description: UUID of the server.
      - in: path
        name: key
        description: Key of the user data to delete.
        required: true
        schema:
          type: string
          description: Key of the user data to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/servers/{server_id}/user_data/{key}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/snapshots:
    get:
      tags:
      - Snapshots
      operationId: ListSnapshots
      summary: List snapshots
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: organization
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: per_page
        schema:
          $ref: '#/components/schemas/google.protobuf.UInt32Value'
      - in: query
        name: page
        description: Page number
        schema:
          type: integer
          description: Page number
          default: 1
      - in: query
        name: name
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: project
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      - in: query
        name: tags
        schema:
          $ref: '#/components/schemas/google.protobuf.StringValue'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListSnapshotsResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots?name=&organization=&per_page=&project=&tags="
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots" \
            X-Auth-Token:$SCW_SECRET_KEY \
            name== \
            organization== \
            per_page== \
            project== \
            tags==
    post:
      tags:
      - Snapshots
      operationId: CreateSnapshot
      summary: Create a snapshot from a given volume or from a QCOW2 file
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateSnapshotResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the snapshot.
                volume_id:
                  type: string
                  description: UUID of the volume.
                  nullable: true
                tags:
                  type: array
                  description: The tags of the snapshot.
                  items:
                    type: string
                organization:
                  type: string
                  description: Organization ID of the snapshot.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: Project ID of the snapshot.
                  x-one-of: ProjectIdentifier
                volume_type:
                  type: string
                  description: |-
                    The volume type of the snapshot.
                    Overrides the volume_type of the snapshot.
                    If omitted, the volume type of the original volume will be used.
                  enum:
                  - unknown_volume_type
                  - l_ssd
                  - b_ssd
                  - unified
                  default: unknown_volume_type
                bucket:
                  type: string
                  description: Bucket name for snapshot imports.
                  nullable: true
                key:
                  type: string
                  description: Object key for snapshot imports.
                  nullable: true
                size:
                  type: integer
                  description: Imported snapshot size, must be a multiple of 512.
                    (in bytes)
                  nullable: true
              x-properties-order:
              - name
              - volume_id
              - tags
              - organization
              - project
              - volume_type
              - bucket
              - key
              - size
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"name":"string","tags":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots" \
            X-Auth-Token:$SCW_SECRET_KEY \
            name="string" \
            tags:='["string"]'
  /instance/v1/zones/{zone}/snapshots/{snapshot_id}:
    get:
      tags:
      - Snapshots
      operationId: GetSnapshot
      summary: Get a snapshot
      description: Get details of a snapshot with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: snapshot_id
        description: UUID of the snapshot you want to get.
        required: true
        schema:
          type: string
          description: UUID of the snapshot you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetSnapshotResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    put:
      tags:
      - Snapshots
      operationId: SetSnapshot
      summary: Update snapshot
      description: Replace all snapshot properties with a snapshot message.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: snapshot_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetSnapshotResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                organization:
                  type: string
                volume_type:
                  $ref: '#/components/schemas/scaleway.instance.v1.Volume.VolumeType'
                size:
                  type: integer
                  description: (in bytes)
                  format: uint64
                state:
                  $ref: '#/components/schemas/scaleway.instance.v1.Snapshot.State'
                base_volume:
                  $ref: '#/components/schemas/scaleway.instance.v1.Snapshot.BaseVolume'
                creation_date:
                  type: string
                  description: (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                modification_date:
                  type: string
                  description: (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                project:
                  type: string
                tags:
                  $ref: '#/components/schemas/scaleway.std.StringsValue'
              x-properties-order:
              - id
              - name
              - organization
              - volume_type
              - size
              - state
              - base_volume
              - creation_date
              - modification_date
              - project
              - tags
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "base_volume": "",
              "id": "string",
              "name": "string",
              "organization": "string",
              "project": "string",
              "size": 42,
              "state": "",
              "tags": "",
              "volume_type": ""
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            base_volume="" \
            id="string" \
            name="string" \
            organization="string" \
            project="string" \
            size:=42 \
            state="" \
            tags="" \
            volume_type=""
    delete:
      tags:
      - Snapshots
      operationId: DeleteSnapshot
      summary: Delete a snapshot
      description: Delete the snapshot with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: snapshot_id
        description: UUID of the snapshot you want to delete.
        required: true
        schema:
          type: string
          description: UUID of the snapshot you want to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
  /instance/v1/zones/{zone}/snapshots/{snapshot_id}/export:
    post:
      tags:
      - Snapshots
      operationId: ExportSnapshot
      summary: Export a snapshot
      description: Export a snapshot to a given S3 bucket in the same region.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: snapshot_id
        description: The snapshot ID.
        required: true
        schema:
          type: string
          description: The snapshot ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ExportSnapshotResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bucket:
                  type: string
                  description: S3 bucket name.
                key:
                  type: string
                  description: S3 object key.
              x-properties-order:
              - bucket
              - key
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"bucket":"string","key":"string"}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}/export"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/snapshots/{snapshot_id}/export" \
            X-Auth-Token:$SCW_SECRET_KEY \
            bucket="string" \
            key="string"
  /instance/v1/zones/{zone}/volumes:
    get:
      tags:
      - Volumes
      operationId: ListVolumes
      summary: List volumes
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: query
        name: volume_type
        description: Filter by volume type.
        schema:
          type: string
          description: Filter by volume type.
          enum:
          - l_ssd
          - b_ssd
          - unified
          default: l_ssd
      - in: query
        name: per_page
        description: A positive integer lower or equal to 100 to select the number
          of items to return.
        schema:
          type: integer
          description: A positive integer lower or equal to 100 to select the number
            of items to return.
          default: "50"
      - in: query
        name: page
        description: A positive integer to choose the page to return.
        schema:
          type: integer
          description: A positive integer to choose the page to return.
          default: 1
      - in: query
        name: organization
        description: Filter volume by organization ID.
        schema:
          type: string
          description: Filter volume by organization ID.
      - in: query
        name: project
        description: Filter volume by project ID.
        schema:
          type: string
          description: Filter volume by project ID.
      - in: query
        name: tags
        description: Filter volumes with these exact tags (to filter with several
          tags, use commas to separate them).
        schema:
          type: string
          description: Filter volumes with these exact tags (to filter with several
            tags, use commas to separate them).
      - in: query
        name: name
        description: Filter volume by name (for eg. "vol" will return "myvolume" but
          not "data").
        schema:
          type: string
          description: Filter volume by name (for eg. "vol" will return "myvolume"
            but not "data").
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.ListVolumesResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/volumes" \
            X-Auth-Token:$SCW_SECRET_KEY
    post:
      tags:
      - Volumes
      operationId: CreateVolume
      summary: Create a volume
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.CreateVolumeResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The volume name.
                organization:
                  type: string
                  description: The volume organization ID.
                  deprecated: true
                  x-one-of: ProjectIdentifier
                project:
                  type: string
                  description: The volume project ID.
                  x-one-of: ProjectIdentifier
                tags:
                  type: array
                  description: The volume tags.
                  items:
                    type: string
                volume_type:
                  type: string
                  description: The volume type.
                  enum:
                  - l_ssd
                  - b_ssd
                  - unified
                  default: l_ssd
                size:
                  type: integer
                  description: The volume disk size, must be a multiple of 512. (in
                    bytes)
                  format: uint64
                  x-one-of: from
                base_volume:
                  type: string
                  description: The ID of the volume on which this volume will be based.
                  x-one-of: from
                base_snapshot:
                  type: string
                  description: The ID of the snapshot on which this volume will be
                    based.
                  x-one-of: from
              x-properties-order:
              - name
              - organization
              - project
              - tags
              - volume_type
              - size
              - base_volume
              - base_snapshot
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X POST \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{"name":"string","tags":["string"]}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes"
      - lang: HTTPie
        source: |-
          http POST "https://api.scaleway.com/instance/v1/zones/{zone}/volumes" \
            X-Auth-Token:$SCW_SECRET_KEY \
            name="string" \
            tags:='["string"]'
  /instance/v1/zones/{zone}/volumes/{id}:
    put:
      tags:
      - Volumes
      operationId: SetVolume
      summary: Update volume
      description: Replace all volume properties with a volume message.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: id
        description: The volumes unique ID.
        required: true
        schema:
          type: string
          description: The volumes unique ID.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.SetVolumeResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The volumes names.
                tags:
                  type: array
                  description: The tags of the volume.
                  nullable: true
                  items:
                    type: string
                export_uri:
                  type: string
                  description: Show the volumes NBD export URI, this field is ignored.
                  deprecated: true
                size:
                  type: integer
                  description: The volume's disk size, must be a multiple of 512.
                    (in bytes)
                  format: uint64
                volume_type:
                  type: string
                  description: The volume's type.
                  enum:
                  - l_ssd
                  - b_ssd
                  - unified
                  default: l_ssd
                creation_date:
                  type: string
                  description: The volume's creation date. (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                modification_date:
                  type: string
                  description: The volume's modification date. (RFC 3339 format)
                  format: date-time
                  example: "2022-03-22T12:34:56.123456Z"
                  nullable: true
                organization:
                  type: string
                  description: The volume's organization ID.
                project:
                  type: string
                  description: The volume's project ID.
                server:
                  type: object
                  description: The server attached to the volume.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  x-properties-order:
                  - id
                  - name
                state:
                  type: string
                  description: The volume's state.
                  enum:
                  - available
                  - snapshotting
                  - error
                  - fetching
                  - resizing
                  - saving
                  - hotsyncing
                  default: available
              x-properties-order:
              - name
              - tags
              - export_uri
              - size
              - volume_type
              - creation_date
              - modification_date
              - organization
              - project
              - server
              - state
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PUT \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "export_uri": "string",
              "name": "string",
              "organization": "string",
              "project": "string",
              "server": {
                  "id": "string",
                  "name": "string"
              },
              "size": 42
            }' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{id}"
      - lang: HTTPie
        source: |-
          http PUT "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{id}" \
            X-Auth-Token:$SCW_SECRET_KEY \
            export_uri="string" \
            name="string" \
            organization="string" \
            project="string" \
            server:='{
              "id": "string",
              "name": "string"
            }' \
            size:=42
  /instance/v1/zones/{zone}/volumes/{volume_id}:
    get:
      tags:
      - Volumes
      operationId: GetVolume
      summary: Get a volume
      description: Get details of a volume with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: volume_id
        description: UUID of the volume you want to get.
        required: true
        schema:
          type: string
          description: UUID of the volume you want to get.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.GetVolumeResponse'
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X GET \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}"
      - lang: HTTPie
        source: |-
          http GET "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    patch:
      tags:
      - Volumes
      operationId: UpdateVolume
      summary: Update a volume
      description: Replace name and/or size properties of given ID volume with the
        given value(s). Any volume name can be changed while, for now, only `b_ssd`
        volume growing is supported.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: volume_id
        description: UUID of the volume.
        required: true
        schema:
          type: string
          description: UUID of the volume.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleway.instance.v1.UpdateVolumeResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The volume name.
                  nullable: true
                tags:
                  type: array
                  description: The tags of the volume.
                  nullable: true
                  items:
                    type: string
                size:
                  type: integer
                  description: The volume disk size, must be a multiple of 512. (in
                    bytes)
                  nullable: true
              x-properties-order:
              - name
              - tags
              - size
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X PATCH \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}"
      - lang: HTTPie
        source: |-
          http PATCH "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
    delete:
      tags:
      - Volumes
      operationId: DeleteVolume
      summary: Delete a volume
      description: Delete the volume with the given ID.
      parameters:
      - in: path
        name: zone
        description: The zone you want to target
        required: true
        schema:
          type: string
          description: The zone you want to target
          enum:
          - fr-par-1
          - fr-par-2
          - fr-par-3
          - nl-ams-1
          - nl-ams-2
          - pl-waw-1
          - pl-waw-2
      - in: path
        name: volume_id
        description: UUID of the volume you want to delete.
        required: true
        schema:
          type: string
          description: UUID of the volume you want to delete.
      responses:
        "204":
          description: ""
      security:
      - scaleway: []
      x-codeSamples:
      - lang: cURL
        source: |-
          curl -X DELETE \
            -H "X-Auth-Token: $SCW_SECRET_KEY" \
            "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}"
      - lang: HTTPie
        source: |-
          http DELETE "https://api.scaleway.com/instance/v1/zones/{zone}/volumes/{volume_id}" \
            X-Auth-Token:$SCW_SECRET_KEY
